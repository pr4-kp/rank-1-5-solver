-----
25. CASE:[2, 3] A_0 B_0 A_1 A_2 B_1
[['l'], ['l'], ['l'], ['r'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_1)-A_1*(B_0+B_1)==0,A_2>0,A_0*B_1-A_2*(B_0+B_1)==0,B_1>0,B_0*(A_1+A_2+Max(A_0,A_1+A_2))-B_1*(A_0+A_1+A_2)==0,A_0*B_1-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1 = QQ["A_0, B_0, A_1, A_2, B_1"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1),A_0*B_1 - A_2*(B_0 + B_1),B_0*(A_1 + A_2 + A_0) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1),A_0*B_1 - A_2*(B_0 + B_1),B_0*(A_1 + A_2 + A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 - A_1*(B_0 + B_1),A_0*B_1 - A_2*(B_0 + B_1),B_0*(A_1 + A_2 + A_0) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 - A_1*(B_0 + B_1),A_0*B_1 - A_2*(B_0 + B_1),B_0*(A_1 + A_2 + A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
30. CASE:[2, 3] A_0 B_0 A_1 B_1 B_2
[['l'], ['l'], ['l'], ['l', 'r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+B_2+Max(B_0,B_1+B_2))-A_1*(B_0+B_1+B_2)==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,B_2>0,B_0*Max(A_0,A_1)-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-A_1*B_0==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2 = QQ["A_0, B_0, A_1, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_2 + B_0) - A_1*(B_0 + B_1 + B_2),A_1*B_0 - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - A_1*B_0,A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_0) - A_1*(B_0 + B_1 + B_2),A_1*B_0 - B_1*(A_0 + A_1),B_0*A_1 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - A_1*B_0,A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_1 + B_2) - A_1*(B_0 + B_1 + B_2),A_1*B_0 - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - A_1*B_0,A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_1 + B_2) - A_1*(B_0 + B_1 + B_2),A_1*B_0 - B_1*(A_0 + A_1),B_0*A_1 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - A_1*B_0,A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
35. CASE:[2, 3] A_0 B_0 A_1 A_2 B_1
[['l'], ['l'], ['l'], ['r'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_1)-A_1*(B_0+B_1)==0,A_2>0,A_0*B_1-A_2*(B_0+B_1)==0,B_1>0,B_0*(A_1+A_2+Max(A_0,A_1+A_2))-B_1*(A_0+A_1+A_2)==0,A_0*B_1-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1 = QQ["A_0, B_0, A_1, A_2, B_1"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1),A_0*B_1 - A_2*(B_0 + B_1),B_0*(A_1 + A_2 + A_0) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1),A_0*B_1 - A_2*(B_0 + B_1),B_0*(A_1 + A_2 + A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 - A_1*(B_0 + B_1),A_0*B_1 - A_2*(B_0 + B_1),B_0*(A_1 + A_2 + A_0) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 - A_1*(B_0 + B_1),A_0*B_1 - A_2*(B_0 + B_1),B_0*(A_1 + A_2 + A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
40. CASE:[2, 3] A_0 B_0 A_1 B_1 B_2
[['l'], ['l'], ['l'], ['l', 'r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+B_2+Max(B_0,B_1+B_2))-A_1*(B_0+B_1+B_2)==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,B_2>0,B_0*Max(A_0,A_1)-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-A_1*B_0==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2 = QQ["A_0, B_0, A_1, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_2 + B_0) - A_1*(B_0 + B_1 + B_2),A_1*B_0 - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - A_1*B_0,A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_0) - A_1*(B_0 + B_1 + B_2),A_1*B_0 - B_1*(A_0 + A_1),B_0*A_1 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - A_1*B_0,A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_1 + B_2) - A_1*(B_0 + B_1 + B_2),A_1*B_0 - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - A_1*B_0,A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_1 + B_2) - A_1*(B_0 + B_1 + B_2),A_1*B_0 - B_1*(A_0 + A_1),B_0*A_1 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - A_1*B_0,A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
44. CASE:[3, 2] A_0 A_1 B_0 A_2 B_1
[['l'], ['l'], ['l'], ['l'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_1==0,B_0>0,A_2>0,A_0*(B_1+Max(B_0,B_1))-A_2*B_1==0,B_1>0,B_0*(A_2+Max(A_2,A_0+A_1))-B_1*(A_0+A_1+A_2)==0,-A_2*B_0+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1 = QQ["A_0, A_1, B_0, A_2, B_1"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_1,0,A_0*(B_1 + B_0) - A_2*B_1,B_0*(A_2 + A_2) - B_1*(A_0 + A_1 + A_2),-A_2*B_0 + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_1,0,A_0*(B_1 + B_0) - A_2*B_1,B_0*(A_2 + A_0 + A_1) - B_1*(A_0 + A_1 + A_2),-A_2*B_0 + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_1,0,A_0*(B_1 + B_1) - A_2*B_1,B_0*(A_2 + A_2) - B_1*(A_0 + A_1 + A_2),-A_2*B_0 + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_1,0,A_0*(B_1 + B_1) - A_2*B_1,B_0*(A_2 + A_0 + A_1) - B_1*(A_0 + A_1 + A_2),-A_2*B_0 + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
46. CASE:[3, 2] A_0 A_1 B_0 A_2 B_1
[['l'], ['l'], ['l'], ['l'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_1==0,B_0>0,A_2>0,A_0*(B_1+Max(B_0,B_1))-A_2*B_1==0,B_1>0,B_0*(A_2+Max(A_2,A_0+A_1))-B_1*(A_0+A_1+A_2)==0,-A_2*B_0+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1 = QQ["A_0, A_1, B_0, A_2, B_1"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_1,0,A_0*(B_1 + B_0) - A_2*B_1,B_0*(A_2 + A_2) - B_1*(A_0 + A_1 + A_2),-A_2*B_0 + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_1,0,A_0*(B_1 + B_0) - A_2*B_1,B_0*(A_2 + A_0 + A_1) - B_1*(A_0 + A_1 + A_2),-A_2*B_0 + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_1,0,A_0*(B_1 + B_1) - A_2*B_1,B_0*(A_2 + A_2) - B_1*(A_0 + A_1 + A_2),-A_2*B_0 + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_1,0,A_0*(B_1 + B_1) - A_2*B_1,B_0*(A_2 + A_0 + A_1) - B_1*(A_0 + A_1 + A_2),-A_2*B_0 + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
48. CASE:[3, 2] A_0 B_0 B_1 A_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_2+Max(B_2,B_0+B_1))-A_1*(B_0+B_1+B_2)==0,B_2>0,-A_0*B_2+B_0*(A_1+Max(A_0,A_1))==0,A_0*B_2-A_1*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2 = QQ["A_0, B_0, B_1, A_1, B_2"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_2) - A_1*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_0),A_0*B_2 - A_1*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_2) - A_1*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_1),A_0*B_2 - A_1*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_0 + B_1) - A_1*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_0),A_0*B_2 - A_1*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_0 + B_1) - A_1*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_1),A_0*B_2 - A_1*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
50. CASE:[3, 2] A_0 B_0 B_1 A_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_2+Max(B_2,B_0+B_1))-A_1*(B_0+B_1+B_2)==0,B_2>0,-A_0*B_2+B_0*(A_1+Max(A_0,A_1))==0,A_0*B_2-A_1*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2 = QQ["A_0, B_0, B_1, A_1, B_2"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_2) - A_1*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_0),A_0*B_2 - A_1*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_2) - A_1*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_1),A_0*B_2 - A_1*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_0 + B_1) - A_1*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_0),A_0*B_2 - A_1*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_0 + B_1) - A_1*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_1),A_0*B_2 - A_1*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
53. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_1+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_1+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_2)==0,B_2>0,A_0*B_0-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_0*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
Solution 1:
(1, 1/2, 1/2, 1, 1/2, 1/2)
-----
54. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_2)-A_1*(B_0+B_1+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_1+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_2)==0,B_2>0,A_0*B_0-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_0*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_0*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
Solution 1:
(1, 1/2, 1/2, 1, 1/2, 1/2, 1)
-----
55. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_1+B_2)-A_1*(B_0+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,B_2>0,B_0*Max(A_0,A_1+A_2)-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_1 + A_2 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_1 + A_2 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
(no) 56. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_1+B_2)-A_1*B_0==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,B_2>0,B_0*Max(A_0,A_1+A_2)-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_1 + A_2 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_1 + A_2 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
57. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['r'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_1+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_1+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*Max(A_0,A_1)-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_1 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
Solution 1:
(1, 1/2, 1/2, 1, 1/2, 1/2, 1)
-----
58. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['r'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_2)-A_1*(B_0+B_1+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_1+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*Max(A_0,A_1)-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_1 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_1 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
(no) 59. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_1+B_2)-A_1*(B_0+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,B_2>0,-A_0*B_2+B_0*Max(A_0,A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_1 + A_2,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_1 + A_2,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
60. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_1+B_2)-A_1*B_0==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,B_2>0,-A_0*B_2+B_0*Max(A_0,A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_1 + A_2,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_1 + A_2,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
62. CASE:[2, 4] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_2)-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_0 + A_2) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
64. CASE:[2, 4] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_2))-A_1*B_0==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,-A_0*B_2+B_0*(A_2+Max(A_0,A_1))==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_2 + B_0*(A_2 + A_0),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_2 + B_0*(A_2 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_2 + B_0*(A_2 + A_0),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_2 + B_0*(A_2 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
69. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_1+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_1+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_2)==0,B_2>0,A_0*B_0-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_0*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
Solution 1:
(1, 1/2, 1/2, 1, 1/2, 1/2)
-----
70. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_2)-A_1*(B_0+B_1+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_1+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_2)==0,B_2>0,A_0*B_0-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_0*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_0*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
Solution 1:
(1, 1/2, 1/2, 1, 1/2, 1/2, 1)
-----
71. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_1+B_2)-A_1*(B_0+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,B_2>0,B_0*Max(A_0,A_1+A_2)-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_1 + A_2 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_1 + A_2 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
72. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_1+B_2)-A_1*B_0==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,B_2>0,B_0*Max(A_0,A_1+A_2)-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_1 + A_2 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_1 + A_2 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
73. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['r'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_1+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_1+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*Max(A_0,A_1)-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_1 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
Solution 1:
(1, 1/2, 1/2, 1, 1/2, 1/2, 1)
-----
74. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['r'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_2)-A_1*(B_0+B_1+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_1+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*Max(A_0,A_1)-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_1 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_1 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
75. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_1+B_2)-A_1*(B_0+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,B_2>0,-A_0*B_2+B_0*Max(A_0,A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_1 + A_2,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_1 + A_2,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
76. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_1+B_2)-A_1*B_0==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,B_2>0,-A_0*B_2+B_0*Max(A_0,A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_1 + A_2,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2),-A_0*B_2 + B_0*A_1 + A_2,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
78. CASE:[2, 4] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_2)-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_0 + A_2) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
80. CASE:[2, 4] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_2))-A_1*B_0==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,-A_0*B_2+B_0*(A_2+Max(A_0,A_1))==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_2 + B_0*(A_2 + A_0),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_2 + B_0*(A_2 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_2 + B_0*(A_2 + A_0),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*B_0,-A_0*B_2 + B_0*(A_2 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
85. CASE:[2, 4] A_0 A_1 B_0 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_1+B_2)==0,B_0>0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*(B_1+B_2)==0,B_1>0,A_2*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*(A_0+A_1)-B_2*(A_0+A_1+A_2)==0,(A_0+A_1)*(B_0+B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, B_2 = QQ["A_0, A_1, B_0, A_2, B_1, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*(B_0 + B_1 + B_2) - A_2*(B_1 + B_2),A_2*B_0 - B_1*(A_0 + A_1 + A_2),B_0*(A_0 + A_1) - B_2*(A_0 + A_1 + A_2),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
86. CASE:[2, 4] A_0 A_1 B_0 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_2==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*B_2==0,B_2>0,B_0*(A_0+A_1+A_2)-B_2*(A_0+A_1)==0,(A_0+A_1)*(B_0+B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2 = QQ["A_0, A_1, B_0, B_1, A_2, B_2"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2) - A_2*B_2,B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_1),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
87. CASE:[2, 4] A_0 A_1 B_0 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_1+B_2)==0,B_0>0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*(B_1+B_2)==0,B_1>0,A_2*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*(A_0+A_1)-B_2*(A_0+A_1+A_2)==0,(A_0+A_1)*(B_0+B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, B_2 = QQ["A_0, A_1, B_0, A_2, B_1, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*(B_0 + B_1 + B_2) - A_2*(B_1 + B_2),A_2*B_0 - B_1*(A_0 + A_1 + A_2),B_0*(A_0 + A_1) - B_2*(A_0 + A_1 + A_2),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
88. CASE:[2, 4] A_0 A_1 B_0 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_2==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*B_2==0,B_2>0,B_0*(A_0+A_1+A_2)-B_2*(A_0+A_1)==0,(A_0+A_1)*(B_0+B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2 = QQ["A_0, A_1, B_0, B_1, A_2, B_2"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2) - A_2*B_2,B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_1),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
89. CASE:[2, 4] A_0 B_0 B_1 A_1 B_2 A_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,A_1*B_0-B_1*(A_0+A_2)==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1)==0,B_2>0,B_0*(A_0+A_1+A_2)-B_2*(A_0+A_2)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2 = QQ["A_0, B_0, B_1, A_1, B_2, A_2"].gens()
I_list = [ideal(0,0,A_1*B_0 - B_1*(A_0 + A_2),A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1),B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_2),A_0*B_2 - A_2*(B_0 + B_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
90. CASE:[2, 4] A_0 B_0 B_1 A_1 B_2 A_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1)==0,B_2>0,-A_0*B_2+B_0*(A_0+A_1+A_2)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2 = QQ["A_0, B_0, B_1, A_1, B_2, A_2"].gens()
I_list = [ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1),-A_0*B_2 + B_0*(A_0 + A_1 + A_2),A_0*B_2 - A_2*(B_0 + B_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
91. CASE:[2, 4] A_0 B_0 B_1 A_1 B_2 A_2
[['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,A_1*B_0-B_1*(A_0+A_2)==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*B_0==0,B_2>0,B_0*(A_0+A_1+A_2)-B_2*(A_0+A_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2 = QQ["A_0, B_0, B_1, A_1, B_2, A_2"].gens()
I_list = [ideal(0,0,A_1*B_0 - B_1*(A_0 + A_2),A_0*(B_0 + B_1 + B_2) - A_1*B_0,B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_2),A_0*(B_1 + B_2) - A_2*B_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
93. CASE:[2, 4] A_0 B_0 B_1 A_1 B_2 A_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,A_1*B_0-B_1*(A_0+A_2)==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1)==0,B_2>0,B_0*(A_0+A_1+A_2)-B_2*(A_0+A_2)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2 = QQ["A_0, B_0, B_1, A_1, B_2, A_2"].gens()
I_list = [ideal(0,0,A_1*B_0 - B_1*(A_0 + A_2),A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1),B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_2),A_0*B_2 - A_2*(B_0 + B_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
94. CASE:[2, 4] A_0 B_0 B_1 A_1 B_2 A_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1)==0,B_2>0,-A_0*B_2+B_0*(A_0+A_1+A_2)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2 = QQ["A_0, B_0, B_1, A_1, B_2, A_2"].gens()
I_list = [ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1),-A_0*B_2 + B_0*(A_0 + A_1 + A_2),A_0*B_2 - A_2*(B_0 + B_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
95. CASE:[2, 4] A_0 B_0 B_1 A_1 B_2 A_2
[['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,A_1*B_0-B_1*(A_0+A_2)==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*B_0==0,B_2>0,B_0*(A_0+A_1+A_2)-B_2*(A_0+A_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2 = QQ["A_0, B_0, B_1, A_1, B_2, A_2"].gens()
I_list = [ideal(0,0,A_1*B_0 - B_1*(A_0 + A_2),A_0*(B_0 + B_1 + B_2) - A_1*B_0,B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_2),A_0*(B_1 + B_2) - A_2*B_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
97. CASE:[3, 3] A_0 B_0 A_1 A_2 B_1 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(A_0+A_1+A_2+A_3)-B_1*(A_0+A_1+A_2+A_3)==0,A_3>0,A_0*B_1-A_3*B_0==0,-B_0*(A_2+A_3)+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3 = QQ["A_0, B_0, A_1, A_2, B_1, A_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_0 + A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
Solution 1:
(1, 1, -1, -1, 1, -1)
Solution 2:
(1, 1, 1, 1, 1, 1)
-----
98. CASE:[3, 3] A_0 B_0 A_1 A_2 B_1 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(A_0+A_3+Max(A_1+A_2,A_2+A_3))-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*B_1-A_3*B_0==0,-B_0*(A_2+A_3)+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3 = QQ["A_0, B_0, A_1, A_2, B_1, A_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
100. CASE:[3, 3] A_0 B_0 A_1 A_2 B_1 A_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(A_1+A_2+Max(A_0+A_3,A_2+A_3))-B_1*(A_0+A_1+A_3)==0,A_3>0,A_0*B_1-A_3*B_0==0,-B_0*(A_2+A_3)+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3 = QQ["A_0, B_0, A_1, A_2, B_1, A_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_0 + A_3) - B_1*(A_0 + A_1 + A_3),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_2 + A_3) - B_1*(A_0 + A_1 + A_3),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
101. CASE:[3, 3] A_0 B_0 A_1 A_2 B_1 A_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(Max(A_0+A_3,A_2+A_3)+Max(A_1+A_2,A_2+A_3))-B_1*(A_0+A_1)==0,A_3>0,A_0*B_1-A_3*B_0==0,-B_0*(A_2+A_3)+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3 = QQ["A_0, B_0, A_1, A_2, B_1, A_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_2 + A_3 + A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_2 + A_3 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
106. CASE:[3, 3] A_0 B_0 A_1 A_2 A_3 B_1
[['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,A_3>0,A_0*B_1-A_3*B_0==0,B_1>0,B_0*(A_2+A_3+Max(A_0,A_2+A_3))-B_1*(A_0+A_1+A_2)==0,-B_0*(A_2+A_3)+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, A_3, B_1 = QQ["A_0, B_0, A_1, A_2, A_3, B_1"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,A_0*B_1 - A_3*B_0,B_0*(A_2 + A_3 + A_0) - B_1*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,A_0*B_1 - A_3*B_0,B_0*(A_2 + A_3 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
107. CASE:[3, 3] A_0 B_0 A_1 A_2 A_3 B_1
[['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,A_3>0,A_0*B_1-A_3*B_0==0,B_1>0,B_0*(A_2+A_3+Max(A_0,A_2+A_3))-B_1*(A_0+A_1)==0,-B_0*(A_2+A_3)+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, A_3, B_1 = QQ["A_0, B_0, A_1, A_2, A_3, B_1"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,A_0*B_1 - A_3*B_0,B_0*(A_2 + A_3 + A_0) - B_1*(A_0 + A_1),-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,A_0*B_1 - A_3*B_0,B_0*(A_2 + A_3 + A_2 + A_3) - B_1*(A_0 + A_1),-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
108. CASE:[3, 3] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*(2*B_1+2*B_2)-A_2*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,B_2>0,B_0*Max(A_0,A_2)-B_2*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(2*B_1 + 2*B_2) - A_2*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(2*B_1 + 2*B_2) - A_2*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_2 - B_2*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
109. CASE:[3, 3] A_0 B_0 B_1 A_1 B_2 A_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,A_1*B_0-B_1*(A_0+A_2)==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1)==0,B_2>0,B_0*(A_0+A_1+A_2)-B_2*(A_0+A_2)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,A_0*B_2-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2 = QQ["A_0, B_0, B_1, A_1, B_2, A_2"].gens()
I_list = [ideal(0,0,A_1*B_0 - B_1*(A_0 + A_2),A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1),B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_2),A_0*B_2 - A_2*(B_0 + B_1),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
113. CASE:[3, 3] A_0 A_1 B_0 A_2 A_3 B_1
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_1==0,B_0>0,A_2>0,A_0*B_0-A_2*B_1==0,A_3>0,A_0*B_1-A_3*B_1==0,B_1>0,B_0*(A_0+A_1+A_2+A_3)-B_1*(A_0+A_1+A_2+A_3)==0,-B_0*(A_2+A_3)+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, A_3, B_1 = QQ["A_0, A_1, B_0, A_2, A_3, B_1"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_1,0,A_0*B_0 - A_2*B_1,A_0*B_1 - A_3*B_1,B_0*(A_0 + A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
Solution 1:
(1, -1, -1, 1, 1, -1)
Solution 2:
(1, 1, 1, 1, 1, 1)
-----
114. CASE:[3, 3] A_0 A_1 B_0 A_2 A_3 B_1
[['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_1==0,B_0>0,A_2>0,A_0*B_0-A_2*B_1==0,A_3>0,A_0*B_1-A_3*B_1==0,B_1>0,B_0*(A_2+A_3+Max(A_2,A_0+A_1))-B_1*(A_0+A_1+A_2+A_3)==0,-B_0*(A_2+A_3)+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, A_3, B_1 = QQ["A_0, A_1, B_0, A_2, A_3, B_1"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_1,0,A_0*B_0 - A_2*B_1,A_0*B_1 - A_3*B_1,B_0*(A_2 + A_3 + A_2) - B_1*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_1,0,A_0*B_0 - A_2*B_1,A_0*B_1 - A_3*B_1,B_0*(A_2 + A_3 + A_0 + A_1) - B_1*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
Solution 1:
(1, -1, -1, 1, 1, -1, 0)
Solution 2:
(1, 1, 1, 1, 1, 1, 2)
-----
116. CASE:[3, 3] A_0 A_1 B_0 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_1+B_2)==0,B_0>0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*(B_1+B_2)==0,B_1>0,A_2*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*(A_0+A_1)-B_2*(A_0+A_1+A_2)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, B_2 = QQ["A_0, A_1, B_0, A_2, B_1, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*(B_0 + B_1 + B_2) - A_2*(B_1 + B_2),A_2*B_0 - B_1*(A_0 + A_1 + A_2),B_0*(A_0 + A_1) - B_2*(A_0 + A_1 + A_2),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
117. CASE:[3, 3] A_0 A_1 B_0 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_1+B_2)==0,B_0>0,A_2>0,A_0*(B_1+B_2+Max(B_0,B_2))-A_2*(B_1+B_2)==0,B_1>0,A_2*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*(A_0+A_1)-B_2*(A_0+A_1+A_2)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, B_2 = QQ["A_0, A_1, B_0, A_2, B_1, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*(B_1 + B_2 + B_0) - A_2*(B_1 + B_2),A_2*B_0 - B_1*(A_0 + A_1 + A_2),B_0*(A_0 + A_1) - B_2*(A_0 + A_1 + A_2),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*(B_1 + B_2 + B_2) - A_2*(B_1 + B_2),A_2*B_0 - B_1*(A_0 + A_1 + A_2),B_0*(A_0 + A_1) - B_2*(A_0 + A_1 + A_2),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
118. CASE:[3, 3] A_0 A_1 B_0 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,A_2>0,A_0*(B_1+B_2+Max(B_0,B_1+B_2))-A_2*B_2==0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,B_2>0,B_0*Max(A_2,A_0+A_1)-B_2*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, B_2 = QQ["A_0, A_1, B_0, A_2, B_1, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_1 + B_2 + B_0) - A_2*B_2,A_2*B_0 - B_1*(A_0 + A_1),B_0*A_2 - B_2*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_1 + B_2 + B_0) - A_2*B_2,A_2*B_0 - B_1*(A_0 + A_1),B_0*A_0 + A_1 - B_2*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_1 + B_2 + B_1 + B_2) - A_2*B_2,A_2*B_0 - B_1*(A_0 + A_1),B_0*A_2 - B_2*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_1 + B_2 + B_1 + B_2) - A_2*B_2,A_2*B_0 - B_1*(A_0 + A_1),B_0*A_0 + A_1 - B_2*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
120. CASE:[3, 3] A_0 B_0 B_1 A_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_1+B_2)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1+B_2)==0,B_2>0,-A_0*B_2+B_0*(A_0+A_1+A_2)==0,A_0*B_2-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2 = QQ["A_0, B_0, B_1, A_1, A_2, B_2"].gens()
I_list = [ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_0 + B_1) - A_1*(B_0 + B_1 + B_2),A_0*B_2 - A_2*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_0 + A_1 + A_2),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
121. CASE:[3, 3] A_0 B_0 B_1 A_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*Max(B_2,B_0+B_1)-A_1*(B_0+B_1)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2+Max(A_0,A_1+A_2))==0,A_0*B_2-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2 = QQ["A_0, B_0, B_1, A_1, A_2, B_2"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*B_2 - A_1*(B_0 + B_1),A_0*B_2 - A_2*(B_0 + B_1),-A_0*B_2 + B_0*(A_1 + A_2 + A_0),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*B_2 - A_1*(B_0 + B_1),A_0*B_2 - A_2*(B_0 + B_1),-A_0*B_2 + B_0*(A_1 + A_2 + A_1 + A_2),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*B_0 + B_1 - A_1*(B_0 + B_1),A_0*B_2 - A_2*(B_0 + B_1),-A_0*B_2 + B_0*(A_1 + A_2 + A_0),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*B_0 + B_1 - A_1*(B_0 + B_1),A_0*B_2 - A_2*(B_0 + B_1),-A_0*B_2 + B_0*(A_1 + A_2 + A_1 + A_2),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
122. CASE:[3, 3] A_0 B_0 B_1 A_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_1+B_2)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1+B_2)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2+Max(A_0,A_1))==0,A_0*B_2-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2 = QQ["A_0, B_0, B_1, A_1, A_2, B_2"].gens()
I_list = [ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_0 + B_1) - A_1*(B_0 + B_1 + B_2),A_0*B_2 - A_2*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_2 + A_0),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_0 + B_1) - A_1*(B_0 + B_1 + B_2),A_0*B_2 - A_2*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_2 + A_1),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
124. CASE:[3, 3] A_0 B_0 B_1 A_1 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_0+B_1+B_2+B_3)-A_1*(B_0+B_1+B_2+B_3)==0,B_2>0,-A_0*B_2+A_1*B_0==0,B_3>0,A_0*B_0-A_0*B_3==0,A_0*(B_2+B_3)-A_1*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, B_3 = QQ["A_0, B_0, B_1, A_1, B_2, B_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_0 + B_1 + B_2 + B_3) - A_1*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + A_1*B_0,A_0*B_0 - A_0*B_3,A_0*(B_2 + B_3) - A_1*(B_0 + B_1),A_0-1,B_0-1),
]
Solution 1:
(1, -1, 1, -1, -1, 1)
Solution 2:
(1, 1, 1, 1, 1, 1)
-----
125. CASE:[3, 3] A_0 B_0 B_1 A_1 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_2+B_3+Max(B_3,B_0+B_1))-A_1*(B_0+B_1+B_2+B_3)==0,B_2>0,-A_0*B_2+A_1*B_0==0,B_3>0,A_0*B_0-A_0*B_3==0,A_0*(B_2+B_3)-A_1*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, B_3 = QQ["A_0, B_0, B_1, A_1, B_2, B_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_3 + B_3) - A_1*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + A_1*B_0,A_0*B_0 - A_0*B_3,A_0*(B_2 + B_3) - A_1*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_3 + B_0 + B_1) - A_1*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + A_1*B_0,A_0*B_0 - A_0*B_3,A_0*(B_2 + B_3) - A_1*(B_0 + B_1),A_0-1,B_0-1),
]
Solution 1:
(1, -1, 1, -1, -1, 1, 0)
Solution 2:
(1, 1, 1, 1, 1, 1, 2)
-----
127. CASE:[3, 3] A_0 B_0 A_1 B_1 B_2 A_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*B_0==0,B_1>0,A_1*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*(A_0+A_2)-B_2*(A_0+A_1+A_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2 = QQ["A_0, B_0, A_1, B_1, B_2, A_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1 + A_2),B_0*(A_0 + A_2) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_2*B_0,-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
128. CASE:[3, 3] A_0 B_0 A_1 B_1 B_2 A_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,B_1>0,B_0*Max(A_1,A_2)-B_1*(A_0+A_1)==0,B_2>0,B_0*(A_0+A_2)-B_2*(A_0+A_1)==0,A_2>0,A_0*(2*B_1+2*B_2)-A_2*B_0==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2 = QQ["A_0, B_0, A_1, B_1, B_2, A_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,B_0*A_1 - B_1*(A_0 + A_1),B_0*(A_0 + A_2) - B_2*(A_0 + A_1),A_0*(2*B_1 + 2*B_2) - A_2*B_0,-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,B_0*A_2 - B_1*(A_0 + A_1),B_0*(A_0 + A_2) - B_2*(A_0 + A_1),A_0*(2*B_1 + 2*B_2) - A_2*B_0,-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
129. CASE:[3, 3] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_2)-B_2*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_0 + A_2) - B_2*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
130. CASE:[3, 3] A_0 A_1 B_0 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_2==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*B_2==0,B_2>0,B_0*(A_0+A_1+A_2)-B_2*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2 = QQ["A_0, A_1, B_0, B_1, A_2, B_2"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2) - A_2*B_2,B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
134. CASE:[4, 2] A_0 A_1 B_0 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_2==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*B_2==0,B_2>0,B_0*(A_0+A_1+A_2)-B_2*(A_0+A_1)==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2 = QQ["A_0, A_1, B_0, B_1, A_2, B_2"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2) - A_2*B_2,B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
136. CASE:[4, 2] A_0 A_1 B_0 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_2==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*B_2==0,B_2>0,B_0*(A_0+A_1+A_2)-B_2*(A_0+A_1)==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2 = QQ["A_0, A_1, B_0, B_1, A_2, B_2"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2) - A_2*B_2,B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
138. CASE:[4, 2] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_2)-B_2*(A_0+A_1)==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_0 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
139. CASE:[4, 2] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+Max(B_1,B_2))-A_2*B_0==0,B_2>0,B_0*(A_2+Max(A_0,A_2))-B_2*(A_0+A_1)==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_1) - A_2*B_0,B_0*(A_2 + A_0) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_1) - A_2*B_0,B_0*(A_2 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_2) - A_2*B_0,B_0*(A_2 + A_0) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_2) - A_2*B_0,B_0*(A_2 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
141. CASE:[4, 2] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_2)-B_2*(A_0+A_1)==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_0 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
142. CASE:[4, 2] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+Max(B_1,B_2))-A_2*B_0==0,B_2>0,B_0*(A_2+Max(A_0,A_2))-B_2*(A_0+A_1)==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_1) - A_2*B_0,B_0*(A_2 + A_0) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_1) - A_2*B_0,B_0*(A_2 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_2) - A_2*B_0,B_0*(A_2 + A_0) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_2) - A_2*B_0,B_0*(A_2 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
144. CASE:[4, 2] A_0 B_0 A_1 B_1 B_2 A_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*B_0==0,B_1>0,A_1*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*(A_0+A_2)-B_2*(A_0+A_1+A_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2 = QQ["A_0, B_0, A_1, B_1, B_2, A_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1 + A_2),B_0*(A_0 + A_2) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_2*B_0,-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
146. CASE:[4, 2] A_0 B_0 A_1 B_1 B_2 A_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*B_0==0,B_1>0,A_1*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*(A_0+A_2)-B_2*(A_0+A_1+A_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2 = QQ["A_0, B_0, A_1, B_1, B_2, A_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1 + A_2),B_0*(A_0 + A_2) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_2*B_0,-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
