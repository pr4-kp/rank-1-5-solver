48. CASE:[3, 2] A_0 B_0 B_1 A_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_2+Max(B_2,B_0+B_1))-A_1*(B_0+B_1+B_2)==0,B_2>0,-A_0*B_2+B_0*(A_1+Max(A_0,A_1))==0,A_0*B_2-A_1*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2 = QQ["A_0, B_0, B_1, A_1, B_2"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_2) - A_1*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_0),A_0*B_2 - A_1*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_2) - A_1*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_1),A_0*B_2 - A_1*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_0 + B_1) - A_1*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_0),A_0*B_2 - A_1*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_0 + B_1) - A_1*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_1),A_0*B_2 - A_1*(B_0 + B_1),A_0-1,B_0-1),
]

Twirling construction {B_2: 2, A_1: 1, B_1: 1, B_0: 1, A_0: 1}



55. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_1+B_2)-A_1*(B_0+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,B_2>0,B_0*Max(A_0,A_1+A_2)-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_1 + A_2 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),B_0*A_1 + A_2 - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]

{B_2: 1, B_1: 1, A_2: 1, A_1: 1, B_0: 1, A_0: 1}
