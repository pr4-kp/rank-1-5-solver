-----
61. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['r'], ['l', 'r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_1+B_2)-A_1*(B_0+B_1+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_1+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*Max(A_0,A_1+A_2)-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_1 + A_2 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_1 + A_2 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
63. CASE:[2, 4] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_2))-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_2)-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_0 + A_2) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_0 + A_2) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
65. CASE:[2, 4] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['r'], ['r'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_2))-A_1*(B_0+B_2)==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_2>0,-A_0*B_2+B_0*(A_2+Max(A_0,A_1))==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_2 + B_0*(A_2 + A_0),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_2 + B_0*(A_2 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_2 + B_0*(A_2 + A_0),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_2 + B_0*(A_2 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
66. CASE:[2, 4] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l', 'r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_2>0,B_0*(A_2+Max(A_0,A_1))-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_2 + A_0) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_2 + A_1) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
67. CASE:[2, 4] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l', 'r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_2))-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_2+Max(A_0,A_1))-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_0) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_1) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_0) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_1) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
77. CASE:[2, 4] A_0 B_0 A_1 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['r'], ['l', 'r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_1+B_2)-A_1*(B_0+B_1+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_1+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*Max(A_0,A_1+A_2)-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_1 + A_2 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_1 + B_2 - A_1*(B_0 + B_1 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_1 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),B_0*A_1 + A_2 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
79. CASE:[2, 4] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_2))-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_2)-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_0 + A_2) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_0 + A_2) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
81. CASE:[2, 4] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['r'], ['r'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_2))-A_1*(B_0+B_2)==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_2>0,-A_0*B_2+B_0*(A_2+Max(A_0,A_1))==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_2 + B_0*(A_2 + A_0),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_2 + B_0*(A_2 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_2 + B_0*(A_2 + A_0),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*(B_0 + B_2),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),-A_0*B_2 + B_0*(A_2 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
82. CASE:[2, 4] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l', 'r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,B_2>0,B_0*(A_2+Max(A_0,A_1))-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_2 + A_0) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),B_0*(A_2 + A_1) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
83. CASE:[2, 4] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l', 'r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_2))-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_2+Max(A_0,A_1))-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_0) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_1) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_0) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_1) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
99. CASE:[3, 3] A_0 B_0 A_1 A_2 B_1 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(A_0+A_3+Max(A_1+A_2,A_2+A_3))-B_1*(A_0+A_1+A_2+A_3)==0,A_3>0,A_0*B_1-A_3*B_0==0,-B_0*(A_2+A_3)+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3 = QQ["A_0, B_0, A_1, A_2, B_1, A_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_1 + A_2) - B_1*(A_0 + A_1 + A_2 + A_3),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
102. CASE:[3, 3] A_0 B_0 A_1 A_2 B_1 A_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(Max(A_0+A_3,A_2+A_3)+Max(A_1+A_2,A_2+A_3))-B_1*(A_0+A_1+A_3)==0,A_3>0,A_0*B_1-A_3*B_0==0,-B_0*(A_2+A_3)+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3 = QQ["A_0, B_0, A_1, A_2, B_1, A_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_1 + A_2) - B_1*(A_0 + A_1 + A_3),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_2 + A_3) - B_1*(A_0 + A_1 + A_3),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_2 + A_3 + A_1 + A_2) - B_1*(A_0 + A_1 + A_3),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_2 + A_3 + A_2 + A_3) - B_1*(A_0 + A_1 + A_3),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
103. CASE:[3, 3] A_0 B_0 A_1 A_2 B_1 A_3
[['l'], ['l'], ['l'], ['l'], ['l', 'r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(A_1+A_2+Max(A_0+A_3,A_2+A_3))-B_1*(A_0+A_1+A_2+A_3)==0,A_3>0,A_0*B_1-A_3*B_0==0,-B_0*(A_2+A_3)+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3 = QQ["A_0, B_0, A_1, A_2, B_1, A_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_0 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
104. CASE:[3, 3] A_0 B_0 A_1 A_2 B_1 A_3
[['l'], ['l'], ['l'], ['l'], ['l', 'r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(Max(A_0+A_3,A_2+A_3)+Max(A_1+A_2,A_2+A_3))-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*B_1-A_3*B_0==0,-B_0*(A_2+A_3)+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3 = QQ["A_0, B_0, A_1, A_2, B_1, A_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_2 + A_3 + A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_2 + A_3 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - A_3*B_0,-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
110. CASE:[3, 3] A_0 B_0 B_1 A_1 B_2 A_2
[['l'], ['l'], ['l'], ['l'], ['l', 'r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,A_1*B_0-B_1*(A_0+A_2)==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1)==0,B_2>0,B_0*(A_1+Max(A_0+A_2,A_1+A_2))-B_2*(A_0+A_2)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,A_0*B_2-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2 = QQ["A_0, B_0, B_1, A_1, B_2, A_2"].gens()
I_list = [ideal(0,0,A_1*B_0 - B_1*(A_0 + A_2),A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1),B_0*(A_1 + A_0 + A_2) - B_2*(A_0 + A_2),A_0*B_2 - A_2*(B_0 + B_1),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_1*B_0 - B_1*(A_0 + A_2),A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1),B_0*(A_1 + A_1 + A_2) - B_2*(A_0 + A_2),A_0*B_2 - A_2*(B_0 + B_1),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
111. CASE:[3, 3] A_0 B_0 B_1 A_1 B_2 A_2
[['l'], ['l'], ['l'], ['l'], ['l', 'r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2+Max(A_0+A_2,A_1+A_2))==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,A_0*B_2-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2 = QQ["A_0, B_0, B_1, A_1, B_2, A_2"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1),-A_0*B_2 + B_0*(A_1 + A_2 + A_0 + A_2),A_0*B_2 - A_2*(B_0 + B_1),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1),-A_0*B_2 + B_0*(A_1 + A_2 + A_1 + A_2),A_0*B_2 - A_2*(B_0 + B_1),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
115. CASE:[3, 3] A_0 A_1 B_0 A_2 A_3 B_1
[['l'], ['l'], ['l'], ['l'], ['r'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_1==0,B_0>0,A_2>0,A_0*Max(B_0,B_1)-A_2*B_1==0,A_3>0,A_0*B_1-A_3*B_1==0,B_1>0,B_0*(A_2+A_3+Max(A_0+A_1,A_2+A_3))-B_1*(A_0+A_1+A_2+A_3)==0,-B_0*(A_2+A_3)+B_1*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, A_3, B_1 = QQ["A_0, A_1, B_0, A_2, A_3, B_1"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_1,0,A_0*B_0 - A_2*B_1,A_0*B_1 - A_3*B_1,B_0*(A_2 + A_3 + A_0 + A_1) - B_1*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_1,0,A_0*B_0 - A_2*B_1,A_0*B_1 - A_3*B_1,B_0*(A_2 + A_3 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_1,0,A_0*B_1 - A_2*B_1,A_0*B_1 - A_3*B_1,B_0*(A_2 + A_3 + A_0 + A_1) - B_1*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_1,0,A_0*B_1 - A_2*B_1,A_0*B_1 - A_3*B_1,B_0*(A_2 + A_3 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + B_1*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
119. CASE:[3, 3] A_0 A_1 B_0 A_2 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l', 'r'], ['r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_1+B_2)==0,B_0>0,A_2>0,A_0*(B_1+B_2+Max(B_0,B_1+B_2))-A_2*(B_1+B_2)==0,B_1>0,A_2*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*Max(A_2,A_0+A_1)-B_2*(A_0+A_1+A_2)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, B_2 = QQ["A_0, A_1, B_0, A_2, B_1, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*(B_1 + B_2 + B_0) - A_2*(B_1 + B_2),A_2*B_0 - B_1*(A_0 + A_1 + A_2),B_0*A_2 - B_2*(A_0 + A_1 + A_2),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*(B_1 + B_2 + B_0) - A_2*(B_1 + B_2),A_2*B_0 - B_1*(A_0 + A_1 + A_2),B_0*A_0 + A_1 - B_2*(A_0 + A_1 + A_2),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*(B_1 + B_2 + B_1 + B_2) - A_2*(B_1 + B_2),A_2*B_0 - B_1*(A_0 + A_1 + A_2),B_0*A_2 - B_2*(A_0 + A_1 + A_2),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*(B_1 + B_2 + B_1 + B_2) - A_2*(B_1 + B_2),A_2*B_0 - B_1*(A_0 + A_1 + A_2),B_0*A_0 + A_1 - B_2*(A_0 + A_1 + A_2),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
123. CASE:[3, 3] A_0 B_0 B_1 A_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_1>0,A_0*Max(B_2,B_0+B_1)-A_1*(B_0+B_1+B_2)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1+B_2)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2+Max(A_0,A_1+A_2))==0,A_0*B_2-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2 = QQ["A_0, B_0, B_1, A_1, A_2, B_2"].gens()
I_list = [ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_2 - A_1*(B_0 + B_1 + B_2),A_0*B_2 - A_2*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_2 + A_0),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_2 - A_1*(B_0 + B_1 + B_2),A_0*B_2 - A_2*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_2 + A_1 + A_2),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_0 + B_1 - A_1*(B_0 + B_1 + B_2),A_0*B_2 - A_2*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_2 + A_0),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_0 + B_1 - A_1*(B_0 + B_1 + B_2),A_0*B_2 - A_2*(B_0 + B_1 + B_2),-A_0*B_2 + B_0*(A_1 + A_2 + A_1 + A_2),A_0*B_2 - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
126. CASE:[3, 3] A_0 B_0 B_1 A_1 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l', 'r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_2+B_3+Max(B_0+B_1,B_2+B_3))-A_1*(B_0+B_1+B_2+B_3)==0,B_2>0,-A_0*B_2+A_1*B_0==0,B_3>0,-A_0*B_3+B_0*Max(A_0,A_1)==0,A_0*(B_2+B_3)-A_1*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, B_3 = QQ["A_0, B_0, B_1, A_1, B_2, B_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_3 + B_0 + B_1) - A_1*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + A_1*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_2 + B_3) - A_1*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_3 + B_0 + B_1) - A_1*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + A_1*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_2 + B_3) - A_1*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_3 + B_2 + B_3) - A_1*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + A_1*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_2 + B_3) - A_1*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_3 + B_2 + B_3) - A_1*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + A_1*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_2 + B_3) - A_1*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
131. CASE:[3, 3] A_0 A_1 B_0 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_2==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+Max(B_0+B_1,B_1+B_2))-A_2*B_2==0,B_2>0,B_0*(A_0+A_1+A_2)-B_2*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2 = QQ["A_0, A_1, B_0, B_1, A_2, B_2"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_0 + B_1) - A_2*B_2,B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_1 + B_2) - A_2*B_2,B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
132. CASE:[3, 3] A_0 A_1 B_0 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2+Max(B_0+B_1,B_1+B_2))-A_2*B_2==0,B_2>0,B_0*(A_0+A_1+A_2)-B_2*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2 = QQ["A_0, A_1, B_0, B_1, A_2, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_1 + B_2 + B_0 + B_1) - A_2*B_2,B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_1 + B_2 + B_1 + B_2) - A_2*B_2,B_0*(A_0 + A_1 + A_2) - B_2*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
135. CASE:[4, 2] A_0 A_1 B_0 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_2==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+Max(B_2,B_0+B_1))-A_2*B_2==0,B_2>0,B_0*(A_2+Max(A_2,A_0+A_1))-B_2*(A_0+A_1)==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2 = QQ["A_0, A_1, B_0, B_1, A_2, B_2"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_2) - A_2*B_2,B_0*(A_2 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_2) - A_2*B_2,B_0*(A_2 + A_0 + A_1) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_0 + A_1) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
137. CASE:[4, 2] A_0 A_1 B_0 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_2==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+Max(B_2,B_0+B_1))-A_2*B_2==0,B_2>0,B_0*(A_2+Max(A_2,A_0+A_1))-B_2*(A_0+A_1)==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2 = QQ["A_0, A_1, B_0, B_1, A_2, B_2"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_2) - A_2*B_2,B_0*(A_2 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_2) - A_2*B_2,B_0*(A_2 + A_0 + A_1) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_0 + A_1) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
140. CASE:[4, 2] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+Max(B_1,B_2))-A_2*(B_0+B_2)==0,B_2>0,B_0*(A_2+Max(A_0,A_2))-B_2*(A_0+A_1)==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_1) - A_2*(B_0 + B_2),B_0*(A_2 + A_0) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_1) - A_2*(B_0 + B_2),B_0*(A_2 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_2) - A_2*(B_0 + B_2),B_0*(A_2 + A_0) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_2) - A_2*(B_0 + B_2),B_0*(A_2 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
143. CASE:[4, 2] A_0 B_0 A_1 B_1 A_2 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+Max(B_1,B_2))-A_2*(B_0+B_2)==0,B_2>0,B_0*(A_2+Max(A_0,A_2))-B_2*(A_0+A_1)==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_1) - A_2*(B_0 + B_2),B_0*(A_2 + A_0) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_1) - A_2*(B_0 + B_2),B_0*(A_2 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_2) - A_2*(B_0 + B_2),B_0*(A_2 + A_0) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_2) - A_2*(B_0 + B_2),B_0*(A_2 + A_2) - B_2*(A_0 + A_1),-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
145. CASE:[4, 2] A_0 B_0 A_1 B_1 B_2 A_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*B_0==0,B_1>0,A_1*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*(A_0+2*A_2)-B_2*(A_0+A_1+A_2)==0,A_2>0,A_0*(B_1+2*B_2)-A_2*B_0==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2 = QQ["A_0, B_0, A_1, B_1, B_2, A_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1 + A_2),B_0*(A_0 + 2*A_2) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + 2*B_2) - A_2*B_0,-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
Solution 1:
(1, 1, -1, 1, 1, -1)
Solution 2:
(1, 1 - sqrt(2), 1 - sqrt(2), 1, -sqrt(2) - 1, 1)
Solution 3:
(1, 1 + sqrt(2), 1 + sqrt(2), 1, -1 + sqrt(2), 1)
-----
147. CASE:[4, 2] A_0 B_0 A_1 B_1 B_2 A_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l', 'r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*B_0==0,B_1>0,A_1*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*(A_0+2*A_2)-B_2*(A_0+A_1+A_2)==0,A_2>0,A_0*(B_1+2*B_2)-A_2*B_0==0,-A_2*(B_0+B_1)+B_2*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2 = QQ["A_0, B_0, A_1, B_1, B_2, A_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1 + A_2),B_0*(A_0 + 2*A_2) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + 2*B_2) - A_2*B_0,-A_2*(B_0 + B_1) + B_2*(A_0 + A_1),A_0-1,B_0-1),
]
Solution 1:
(1, 1, -1, 1, 1, -1)
Solution 2:
(1, 1 - sqrt(2), 1 - sqrt(2), 1, -sqrt(2) - 1, 1)
Solution 3:
(1, 1 + sqrt(2), 1 + sqrt(2), 1, -1 + sqrt(2), 1)
-----
148. CASE:[2, 5] A_0 B_0 A_1 B_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_3)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_0+A_2+A_3)-B_2*(A_0+A_1+A_3)==0,A_3>0,A_0*B_2-A_3*B_0==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_3),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_0 + A_2 + A_3) - B_2*(A_0 + A_1 + A_3),A_0*B_2 - A_3*B_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
150. CASE:[2, 5] A_0 B_0 A_1 B_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_3)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_0+A_2+A_3)-B_2*(A_0+A_1+A_3)==0,A_3>0,A_0*B_2-A_3*B_0==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_3),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_0 + A_2 + A_3) - B_2*(A_0 + A_1 + A_3),A_0*B_2 - A_3*B_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
152. CASE:[2, 5] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_2)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_3)-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*B_1 - A_2*(B_0 + B_2),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*(B_0 + B_2),B_0*(A_0 + A_3) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
154. CASE:[2, 5] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_2)-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_2>0,B_0*(A_3+Max(A_0,A_1+A_2))-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_0) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_1 + A_2) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_0) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_1 + A_2) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
156. CASE:[2, 5] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['r'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_2)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*(B_0+B_2)==0,B_2>0,B_0*(A_3+Max(A_0,A_1))-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*B_1 - A_2*(B_0 + B_2),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*(B_0 + B_2),B_0*(A_3 + A_0) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*B_1 - A_2*(B_0 + B_2),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*(B_0 + B_2),B_0*(A_3 + A_1) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
157. CASE:[2, 5] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['r'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_2)-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_2>0,B_0*(A_3+Max(A_0,A_1))-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_0) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_1) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_0) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_1) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
159. CASE:[2, 5] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['r'], ['r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_2)-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2+A_3)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_2>0,-A_0*B_2+B_0*(A_3+Max(A_0,A_1+A_2))==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_3*B_0,-A_0*B_2 + B_0*(A_3 + A_0),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_3*B_0,-A_0*B_2 + B_0*(A_3 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*B_0,A_0*B_1 - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_3*B_0,-A_0*B_2 + B_0*(A_3 + A_0),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*B_0,A_0*B_1 - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_3*B_0,-A_0*B_2 + B_0*(A_3 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
163. CASE:[2, 5] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_2+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,A_0*B_0-B_3*(A_0+A_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),A_0*B_0 - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
164. CASE:[2, 5] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_3))-A_1*(B_0+B_2+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_2+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,A_0*B_0-B_3*(A_0+A_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),A_0*B_0 - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_3) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),A_0*B_0 - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
166. CASE:[2, 5] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['r'], ['r'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_3))-A_1*(B_0+B_2+B_3)==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_2+B_3)==0,B_2>0,-A_0*B_2+A_2*B_0==0,B_3>0,-A_0*B_3+B_0*Max(A_0,A_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_2 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_2 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_3) - A_1*(B_0 + B_2 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_3) - A_1*(B_0 + B_2 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
167. CASE:[2, 5] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['r'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_2+B_3))-A_1*(B_0+B_3)==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_3)==0,B_2>0,-A_0*B_2+A_2*B_0==0,B_3>0,-A_0*B_3+B_0*Max(A_0,A_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_3) - A_1*(B_0 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_3) - A_1*(B_0 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
168. CASE:[2, 5] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['r'], ['r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_2+B_3))-A_1*B_0==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*B_0==0,B_2>0,-A_0*B_2+A_2*B_0==0,B_3>0,-A_0*B_3+B_0*Max(A_0,A_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*B_0,-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*B_0,-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_3) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*B_0,-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_3) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*B_0,-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
174. CASE:[2, 5] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_2)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_3)-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*B_1 - A_2*(B_0 + B_2),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*(B_0 + B_2),B_0*(A_0 + A_3) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
176. CASE:[2, 5] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_2)-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_2>0,B_0*(A_3+Max(A_0,A_1+A_2))-B_2*(A_0+A_1)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_0) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_1 + A_2) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_0) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_1 + A_2) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
178. CASE:[2, 5] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['r'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_2)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*(B_0+B_2)==0,B_2>0,B_0*(A_3+Max(A_0,A_1))-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*B_1 - A_2*(B_0 + B_2),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*(B_0 + B_2),B_0*(A_3 + A_0) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*B_1 - A_2*(B_0 + B_2),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*(B_0 + B_2),B_0*(A_3 + A_1) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
179. CASE:[2, 5] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['r'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_2)-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_2>0,B_0*(A_3+Max(A_0,A_1))-B_2*(A_0+A_1+A_2)==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_0) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_1) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_0) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_1) - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
181. CASE:[2, 5] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['r'], ['r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_2)-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2+A_3)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_2>0,-A_0*B_2+B_0*(A_3+Max(A_0,A_1+A_2))==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_3*B_0,-A_0*B_2 + B_0*(A_3 + A_0),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_3*B_0,-A_0*B_2 + B_0*(A_3 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*B_0,A_0*B_1 - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_3*B_0,-A_0*B_2 + B_0*(A_3 + A_0),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 - A_1*B_0,A_0*B_1 - A_2*B_0,-A_0*B_1 + B_0*(A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_3*B_0,-A_0*B_2 + B_0*(A_3 + A_1 + A_2),A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
185. CASE:[2, 5] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_2+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,A_0*B_0-B_3*(A_0+A_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),A_0*B_0 - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
186. CASE:[2, 5] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_3))-A_1*(B_0+B_2+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_2+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,A_0*B_0-B_3*(A_0+A_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),A_0*B_0 - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_3) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),A_0*B_0 - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
188. CASE:[2, 5] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['r'], ['r'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_3))-A_1*(B_0+B_2+B_3)==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_2+B_3)==0,B_2>0,-A_0*B_2+A_2*B_0==0,B_3>0,-A_0*B_3+B_0*Max(A_0,A_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_2 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_2 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_3) - A_1*(B_0 + B_2 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_3) - A_1*(B_0 + B_2 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
189. CASE:[2, 5] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['r'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_2+B_3))-A_1*(B_0+B_3)==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_3)==0,B_2>0,-A_0*B_2+A_2*B_0==0,B_3>0,-A_0*B_3+B_0*Max(A_0,A_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_3) - A_1*(B_0 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_3) - A_1*(B_0 + B_3),-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_3),-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
190. CASE:[2, 5] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['r'], ['r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_2+B_3))-A_1*B_0==0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*B_0==0,B_2>0,-A_0*B_2+A_2*B_0==0,B_3>0,-A_0*B_3+B_0*Max(A_0,A_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*B_0,-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*B_0,-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_3) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*B_0,-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_0,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_2 + B_3) - A_1*B_0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_2*B_0,-A_0*B_2 + A_2*B_0,-A_0*B_3 + B_0*A_1,A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
196. CASE:[2, 5] A_0 A_1 B_0 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,A_2>0,A_0*(B_0+B_1)-A_2*B_2==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_2==0,B_2>0,B_0*(A_0+A_1+A_3)-B_2*(A_0+A_1+A_2)==0,(A_0+A_1)*(B_0+B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, B_2 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_0 + A_1 + A_3) - B_2*(A_0 + A_1 + A_2),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
197. CASE:[2, 5] A_0 A_1 B_0 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,A_2>0,A_0*(B_0+B_1)-A_2*B_2==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_2==0,B_2>0,B_0*(A_0+A_1+A_3)-B_2*(A_0+A_1+A_2)==0,(A_0+A_1)*(B_0+B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, B_2 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_0 + A_1 + A_3) - B_2*(A_0 + A_1 + A_2),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
200. CASE:[2, 5] A_0 B_0 B_1 A_1 B_2 A_2 B_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1+B_3)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_2+B_3)-A_2*(B_0+B_1+B_3)==0,B_3>0,-A_0*B_3+B_0*(A_0+A_2)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2, B_3 = QQ["A_0, B_0, B_1, A_1, B_2, A_2, B_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_3),-A_0*B_3 + B_0*(A_0 + A_2),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
202. CASE:[2, 5] A_0 B_0 B_1 A_1 B_2 A_2 B_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1+B_3)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_2+B_3)-A_2*(B_0+B_1+B_3)==0,B_3>0,-A_0*B_3+B_0*(A_0+A_2)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2, B_3 = QQ["A_0, B_0, B_1, A_1, B_2, A_2, B_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_3),-A_0*B_3 + B_0*(A_0 + A_2),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
204. CASE:[3, 4] A_0 B_0 A_1 A_2 A_3 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*Max(A_0,A_2+A_3)-B_2*(A_0+A_1+A_2)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, A_3, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, A_3, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),B_0*A_0 - B_2*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),B_0*A_2 + A_3 - B_2*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
205. CASE:[3, 4] A_0 B_0 A_1 A_2 A_3 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_2)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*(B_0+B_2)==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1)==0,B_2>0,B_0*Max(A_0,A_2+A_3)-B_2*(A_0+A_1)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, A_3, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, A_3, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),A_0*(B_1 + B_2) - A_3*(B_0 + B_2),B_0*(A_2 + A_3) - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*(B_1 + B_2) - A_2*(B_0 + B_2),A_0*(B_1 + B_2) - A_3*(B_0 + B_2),B_0*(A_2 + A_3) - B_1*(A_0 + A_1),B_0*A_2 + A_3 - B_2*(A_0 + A_1),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
206. CASE:[3, 4] A_0 B_0 A_1 A_2 A_3 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1)==0,B_2>0,B_0*Max(A_0,A_2+A_3)-B_2*(A_0+A_1)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, A_3, B_1, B_2 = QQ["A_0, B_0, A_1, A_2, A_3, B_1, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),B_0*A_0 - B_2*(A_0 + A_1),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),B_0*A_2 + A_3 - B_2*(A_0 + A_1),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
207. CASE:[3, 4] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_2)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_3)-B_2*(A_0+A_1+A_2)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*B_1 - A_2*(B_0 + B_2),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*(B_0 + B_2),B_0*(A_0 + A_3) - B_2*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
208. CASE:[3, 4] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_2>0,B_0*(A_0+A_3)-B_2*(A_0+A_1+A_2)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_0 + A_3) - B_2*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
Solution 1:
(1, 1, -1, -1, 1, -1, 0)
Solution 2:
(1, 1, 2, 2, 1, 5/4, 3/4)
-----
209. CASE:[3, 4] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_2>0,B_0*(A_3+Max(A_0,A_2))-B_2*(A_0+A_1)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_0) - B_2*(A_0 + A_1),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_3 + A_2) - B_2*(A_0 + A_1),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
212. CASE:[3, 4] A_0 B_0 B_1 A_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_3)==0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_1)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,B_2>0,B_0*(A_0+A_1+A_2+A_3)-B_2*(A_0+A_3)==0,A_3>0,A_0*B_2-A_3*(B_0+B_1)==0,A_0*B_2-(B_0+B_1)*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, A_3 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,B_0*(A_1 + A_2) - B_1*(A_0 + A_3),A_0*(B_0 + B_1) - A_1*(B_0 + B_1),A_0*B_2 - A_2*(B_0 + B_1),B_0*(A_0 + A_1 + A_2 + A_3) - B_2*(A_0 + A_3),A_0*B_2 - A_3*(B_0 + B_1),A_0*B_2 - (B_0 + B_1)*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
213. CASE:[3, 4] A_0 B_0 B_1 A_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_1)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,B_2>0,-A_0*B_2+B_0*(A_0+A_1+A_2+A_3)==0,A_3>0,A_0*B_2-A_3*(B_0+B_1)==0,A_0*B_2-(B_0+B_1)*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, A_3 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_0 + B_1) - A_1*(B_0 + B_1),A_0*B_2 - A_2*(B_0 + B_1),-A_0*B_2 + B_0*(A_0 + A_1 + A_2 + A_3),A_0*B_2 - A_3*(B_0 + B_1),A_0*B_2 - (B_0 + B_1)*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
214. CASE:[3, 4] A_0 B_0 B_1 A_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,A_1*B_0-B_1*(A_0+A_3)==0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_1)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,B_2>0,B_0*(A_0+A_1+A_2+A_3)-B_2*(A_0+A_3)==0,A_3>0,A_0*B_2-A_3*(B_0+B_1)==0,A_0*B_2-(B_0+B_1)*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, A_3 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,A_1*B_0 - B_1*(A_0 + A_3),A_0*(B_0 + B_1) - A_1*(B_0 + B_1),A_0*B_2 - A_2*(B_0 + B_1),B_0*(A_0 + A_1 + A_2 + A_3) - B_2*(A_0 + A_3),A_0*B_2 - A_3*(B_0 + B_1),A_0*B_2 - (B_0 + B_1)*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
215. CASE:[3, 4] A_0 B_0 B_1 A_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_1)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,B_2>0,-A_0*B_2+B_0*(A_0+A_1+A_2+A_3)==0,A_3>0,A_0*B_2-A_3*(B_0+B_1)==0,A_0*B_2-(B_0+B_1)*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, A_3 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_0 + B_1) - A_1*(B_0 + B_1),A_0*B_2 - A_2*(B_0 + B_1),-A_0*B_2 + B_0*(A_0 + A_1 + A_2 + A_3),A_0*B_2 - A_3*(B_0 + B_1),A_0*B_2 - (B_0 + B_1)*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
216. CASE:[3, 4] A_0 B_0 B_1 A_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_3)==0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_1)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,B_2>0,B_0*(A_1+A_2+Max(A_0+A_3,A_1+A_3))-B_2*(A_0+A_3)==0,A_3>0,A_0*B_2-A_3*(B_0+B_1)==0,A_0*B_2-(B_0+B_1)*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, A_3 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,B_0*(A_1 + A_2) - B_1*(A_0 + A_3),A_0*(B_0 + B_1) - A_1*(B_0 + B_1),A_0*B_2 - A_2*(B_0 + B_1),B_0*(A_1 + A_2 + A_0 + A_3) - B_2*(A_0 + A_3),A_0*B_2 - A_3*(B_0 + B_1),A_0*B_2 - (B_0 + B_1)*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,B_0*(A_1 + A_2) - B_1*(A_0 + A_3),A_0*(B_0 + B_1) - A_1*(B_0 + B_1),A_0*B_2 - A_2*(B_0 + B_1),B_0*(A_1 + A_2 + A_1 + A_3) - B_2*(A_0 + A_3),A_0*B_2 - A_3*(B_0 + B_1),A_0*B_2 - (B_0 + B_1)*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
217. CASE:[3, 4] A_0 B_0 B_1 A_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_1)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2+Max(A_0+A_3,A_1+A_3))==0,A_3>0,A_0*B_2-A_3*(B_0+B_1)==0,A_0*B_2-(B_0+B_1)*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, A_3 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_0 + B_1) - A_1*(B_0 + B_1),A_0*B_2 - A_2*(B_0 + B_1),-A_0*B_2 + B_0*(A_1 + A_2 + A_0 + A_3),A_0*B_2 - A_3*(B_0 + B_1),A_0*B_2 - (B_0 + B_1)*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_0 + B_1) - A_1*(B_0 + B_1),A_0*B_2 - A_2*(B_0 + B_1),-A_0*B_2 + B_0*(A_1 + A_2 + A_1 + A_3),A_0*B_2 - A_3*(B_0 + B_1),A_0*B_2 - (B_0 + B_1)*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
220. CASE:[3, 4] A_0 A_1 B_0 A_2 A_3 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_1+B_2)==0,B_0>0,A_2>0,A_0*B_0-A_2*(B_1+B_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*(B_1+B_2)==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2+A_3)==0,B_2>0,B_0*(A_0+A_1)-B_2*(A_0+A_1+A_2+A_3)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, A_3, B_1, B_2 = QQ["A_0, A_1, B_0, A_2, A_3, B_1, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*B_0 - A_2*(B_1 + B_2),A_0*(B_1 + B_2) - A_3*(B_1 + B_2),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),B_0*(A_0 + A_1) - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
221. CASE:[3, 4] A_0 A_1 B_0 A_2 A_3 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_1+B_2)==0,B_0>0,A_2>0,A_0*Max(B_0,B_2)-A_2*(B_1+B_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*(B_1+B_2)==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2+A_3)==0,B_2>0,B_0*(A_0+A_1)-B_2*(A_0+A_1+A_2+A_3)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, A_3, B_1, B_2 = QQ["A_0, A_1, B_0, A_2, A_3, B_1, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*B_0 - A_2*(B_1 + B_2),A_0*(B_1 + B_2) - A_3*(B_1 + B_2),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),B_0*(A_0 + A_1) - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*B_2 - A_2*(B_1 + B_2),A_0*(B_1 + B_2) - A_3*(B_1 + B_2),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),B_0*(A_0 + A_1) - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
222. CASE:[3, 4] A_0 A_1 B_0 A_2 A_3 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,A_2>0,A_0*Max(B_0,B_1+B_2)-A_2*B_2==0,A_3>0,A_0*(B_1+B_2)-A_3*B_2==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,B_2>0,B_0*Max(A_0+A_1,A_2+A_3)-B_2*(A_0+A_1+A_2)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, A_3, B_1, B_2 = QQ["A_0, A_1, B_0, A_2, A_3, B_1, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_0 - A_2*B_2,A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),B_0*A_0 + A_1 - B_2*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_0 - A_2*B_2,A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),B_0*A_2 + A_3 - B_2*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_1 + B_2 - A_2*B_2,A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),B_0*A_0 + A_1 - B_2*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_1 + B_2 - A_2*B_2,A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),B_0*A_2 + A_3 - B_2*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
223. CASE:[3, 4] A_0 A_1 B_0 A_2 A_3 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_1+B_2)==0,B_0>0,A_2>0,A_0*B_0-A_2*(B_1+B_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*(B_1+B_2)==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2+A_3)==0,B_2>0,B_0*Max(A_2,A_0+A_1)-B_2*(A_0+A_1+A_2+A_3)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, A_3, B_1, B_2 = QQ["A_0, A_1, B_0, A_2, A_3, B_1, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*B_0 - A_2*(B_1 + B_2),A_0*(B_1 + B_2) - A_3*(B_1 + B_2),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),B_0*A_2 - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*B_0 - A_2*(B_1 + B_2),A_0*(B_1 + B_2) - A_3*(B_1 + B_2),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),B_0*A_0 + A_1 - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
224. CASE:[3, 4] A_0 A_1 B_0 A_2 A_3 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_1+B_2)==0,B_0>0,A_2>0,A_0*Max(B_0,B_2)-A_2*(B_1+B_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*(B_1+B_2)==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2+A_3)==0,B_2>0,B_0*Max(A_2,A_0+A_1)-B_2*(A_0+A_1+A_2+A_3)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, A_3, B_1, B_2 = QQ["A_0, A_1, B_0, A_2, A_3, B_1, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*B_0 - A_2*(B_1 + B_2),A_0*(B_1 + B_2) - A_3*(B_1 + B_2),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),B_0*A_2 - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*B_0 - A_2*(B_1 + B_2),A_0*(B_1 + B_2) - A_3*(B_1 + B_2),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),B_0*A_0 + A_1 - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*B_2 - A_2*(B_1 + B_2),A_0*(B_1 + B_2) - A_3*(B_1 + B_2),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),B_0*A_2 - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*B_2 - A_2*(B_1 + B_2),A_0*(B_1 + B_2) - A_3*(B_1 + B_2),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),B_0*A_0 + A_1 - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
225. CASE:[3, 4] A_0 A_1 B_0 A_2 A_3 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,A_2>0,A_0*Max(B_0,B_1+B_2)-A_2*B_2==0,A_3>0,A_0*(B_1+B_2)-A_3*B_2==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1)==0,B_2>0,B_0*Max(A_0+A_1,A_2+A_3)-B_2*(A_0+A_1)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, A_3, B_1, B_2 = QQ["A_0, A_1, B_0, A_2, A_3, B_1, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_0 - A_2*B_2,A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),B_0*A_0 + A_1 - B_2*(A_0 + A_1),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_0 - A_2*B_2,A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),B_0*A_2 + A_3 - B_2*(A_0 + A_1),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_1 + B_2 - A_2*B_2,A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),B_0*A_0 + A_1 - B_2*(A_0 + A_1),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_1 + B_2 - A_2*B_2,A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),B_0*A_2 + A_3 - B_2*(A_0 + A_1),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
227. CASE:[3, 4] A_0 A_1 B_0 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,A_2>0,A_0*(B_0+B_1)-A_2*B_2==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_2==0,B_2>0,B_0*(A_0+A_1+A_3)-B_2*(A_0+A_1+A_2)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, B_2 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_0 + A_1 + A_3) - B_2*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
231. CASE:[3, 4] A_0 B_0 B_1 A_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_1+B_2+B_3)==0,A_2>0,A_0*(B_2+B_3)-A_2*(B_0+B_1+B_2+B_3)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2)==0,B_3>0,A_0*B_0-A_0*B_3==0,A_0*(B_2+B_3)-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, B_3 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_0 + B_1) - A_1*(B_0 + B_1 + B_2 + B_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),A_0*B_0 - A_0*B_3,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
232. CASE:[3, 4] A_0 B_0 B_1 A_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_1>0,A_0*Max(B_3,B_0+B_1)-A_1*(B_0+B_1+B_2+B_3)==0,A_2>0,A_0*(B_2+B_3)-A_2*(B_0+B_1+B_2+B_3)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2)==0,B_3>0,A_0*B_0-A_0*B_3==0,A_0*(B_2+B_3)-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, B_3 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_3 - A_1*(B_0 + B_1 + B_2 + B_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),A_0*B_0 - A_0*B_3,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_0 + B_1 - A_1*(B_0 + B_1 + B_2 + B_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),A_0*B_0 - A_0*B_3,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
233. CASE:[3, 4] A_0 B_0 B_1 A_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*Max(B_0+B_1,B_2+B_3)-A_1*(B_0+B_1+B_3)==0,A_2>0,A_0*(B_2+B_3)-A_2*(B_0+B_1+B_3)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2)==0,B_3>0,-A_0*B_3+B_0*Max(A_0,A_1+A_2)==0,A_0*(B_2+B_3)-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, B_3 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*B_0 + B_1 - A_1*(B_0 + B_1 + B_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_0,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*B_0 + B_1 - A_1*(B_0 + B_1 + B_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_1 + A_2,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*B_2 + B_3 - A_1*(B_0 + B_1 + B_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_0,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*B_2 + B_3 - A_1*(B_0 + B_1 + B_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_1 + A_2,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
234. CASE:[3, 4] A_0 B_0 B_1 A_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*Max(B_0+B_1,B_2+B_3)-A_1*(B_0+B_1)==0,A_2>0,A_0*(B_2+B_3)-A_2*(B_0+B_1)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2)==0,B_3>0,-A_0*B_3+B_0*Max(A_0,A_1+A_2)==0,A_0*(B_2+B_3)-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, B_3 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*B_0 + B_1 - A_1*(B_0 + B_1),A_0*(B_2 + B_3) - A_2*(B_0 + B_1),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_0,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*B_0 + B_1 - A_1*(B_0 + B_1),A_0*(B_2 + B_3) - A_2*(B_0 + B_1),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_1 + A_2,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*B_2 + B_3 - A_1*(B_0 + B_1),A_0*(B_2 + B_3) - A_2*(B_0 + B_1),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_0,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*B_2 + B_3 - A_1*(B_0 + B_1),A_0*(B_2 + B_3) - A_2*(B_0 + B_1),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_1 + A_2,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
235. CASE:[3, 4] A_0 B_0 B_1 A_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_1+B_2+B_3)==0,A_2>0,A_0*(B_2+B_3)-A_2*(B_0+B_1+B_2+B_3)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2)==0,B_3>0,-A_0*B_3+B_0*Max(A_0,A_1)==0,A_0*(B_2+B_3)-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, B_3 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_0 + B_1) - A_1*(B_0 + B_1 + B_2 + B_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_0,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*(B_0 + B_1) - A_1*(B_0 + B_1 + B_2 + B_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_1,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
236. CASE:[3, 4] A_0 B_0 B_1 A_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_1>0,A_0*Max(B_3,B_0+B_1)-A_1*(B_0+B_1+B_2+B_3)==0,A_2>0,A_0*(B_2+B_3)-A_2*(B_0+B_1+B_2+B_3)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2)==0,B_3>0,-A_0*B_3+B_0*Max(A_0,A_1)==0,A_0*(B_2+B_3)-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, B_3 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_3 - A_1*(B_0 + B_1 + B_2 + B_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_0,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_3 - A_1*(B_0 + B_1 + B_2 + B_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_1,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_0 + B_1 - A_1*(B_0 + B_1 + B_2 + B_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_0,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_0 + B_1 - A_1*(B_0 + B_1 + B_2 + B_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_2 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),-A_0*B_3 + B_0*A_1,A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
238. CASE:[3, 4] A_0 B_0 B_1 A_1 B_2 A_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1+B_3)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_2+B_3)-A_2*(B_0+B_1+B_3)==0,B_3>0,-A_0*B_3+B_0*(A_0+A_2)==0,A_0*(B_2+B_3)-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2, B_3 = QQ["A_0, B_0, B_1, A_1, B_2, A_2, B_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1 + B_3),-A_0*B_2 + B_0*(A_1 + A_2),A_0*(B_2 + B_3) - A_2*(B_0 + B_1 + B_3),-A_0*B_3 + B_0*(A_0 + A_2),A_0*(B_2 + B_3) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
242. CASE:[3, 4] A_0 B_0 A_1 B_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_3)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_0+A_2+A_3)-B_2*(A_0+A_1+A_3)==0,A_3>0,A_0*B_2-A_3*B_0==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_3),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_0 + A_2 + A_3) - B_2*(A_0 + A_1 + A_3),A_0*B_2 - A_3*B_0,-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
244. CASE:[3, 4] A_0 B_0 A_1 B_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_3)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_0+A_2+A_3)-B_2*(A_0+A_1+A_3)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_3),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_0 + A_2 + A_3) - B_2*(A_0 + A_1 + A_3),A_0*(B_1 + B_2) - A_3*B_0,-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
Solution 1:
(1, 1, -1, -1, 1, 0, -1)
Solution 2:
(1, 1, 2, 2, 1, 3/4, 5/4)
-----
245. CASE:[3, 4] A_0 B_0 A_1 B_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,B_1>0,B_0*(A_2+Max(A_1,A_3))-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_0+A_2+A_3)-B_2*(A_0+A_1)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,B_0*(A_2 + A_1) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_0 + A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - A_3*B_0,-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_0 + A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_1 + B_2) - A_3*B_0,-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
247. CASE:[3, 4] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_2+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,A_0*B_0-B_3*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),A_0*B_0 - B_3*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
248. CASE:[3, 4] A_0 B_0 A_1 B_1 B_2 A_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_3)==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_3)==0,B_3>0,B_0*(A_0+A_2)-B_3*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2, B_3 = QQ["A_0, B_0, A_1, B_1, B_2, A_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3),A_1*B_0 - B_1*(A_0 + A_1),A_2*B_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_3),B_0*(A_0 + A_2) - B_3*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
249. CASE:[3, 4] A_0 A_1 B_0 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_2+B_3)==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2+B_3)-A_2*(B_2+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,B_0*(A_0+A_1)-B_3*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, B_3 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*(B_2 + B_3),0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2 + B_3) - A_2*(B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),B_0*(A_0 + A_1) - B_3*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
250. CASE:[3, 4] A_0 A_1 B_0 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_2+B_3)==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+B_3+Max(B_0+B_1,B_1+B_3))-A_2*(B_2+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,B_0*(A_0+A_1)-B_3*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, B_3 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*(B_2 + B_3),0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_0 + B_1) - A_2*(B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),B_0*(A_0 + A_1) - B_3*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*(B_2 + B_3),0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_1 + B_3) - A_2*(B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),B_0*(A_0 + A_1) - B_3*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
251. CASE:[3, 4] A_0 A_1 B_0 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_3==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2+B_3)-A_2*B_3==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,B_0*(A_0+A_1)-B_3*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, B_3 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_3,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2 + B_3) - A_2*B_3,A_2*B_0 - B_2*(A_0 + A_1),B_0*(A_0 + A_1) - B_3*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
253. CASE:[3, 4] A_0 A_1 B_0 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_2+B_3)==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2+B_3)-A_2*(B_2+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,B_0*(A_0+A_1)-B_3*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, B_3 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2 + B_3) - A_2*(B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),B_0*(A_0 + A_1) - B_3*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
254. CASE:[3, 4] A_0 A_1 B_0 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_2+B_3)==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+B_3+Max(B_0+B_1,B_1+B_3))-A_2*(B_2+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,B_0*(A_0+A_1)-B_3*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, B_3 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_0 + B_1) - A_2*(B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),B_0*(A_0 + A_1) - B_3*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_1 + B_3) - A_2*(B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),B_0*(A_0 + A_1) - B_3*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
255. CASE:[3, 4] A_0 A_1 B_0 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['r'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_3==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2+B_3)-A_2*B_3==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,B_0*(A_0+A_1)-B_3*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, B_3 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_3,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2 + B_3) - A_2*B_3,A_2*B_0 - B_2*(A_0 + A_1),B_0*(A_0 + A_1) - B_3*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
257. CASE:[4, 3] A_0 A_1 B_0 A_2 A_3 B_1 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_1+B_2)==0,B_0>0,A_2>0,A_0*B_0-A_2*(B_1+B_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*(B_1+B_2)==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2+A_3)==0,B_2>0,B_0*(A_0+A_1)-B_2*(A_0+A_1+A_2+A_3)==0,-A_3*B_0+(B_1+B_2)*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, A_3, B_1, B_2 = QQ["A_0, A_1, B_0, A_2, A_3, B_1, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_1 + B_2),0,A_0*B_0 - A_2*(B_1 + B_2),A_0*(B_1 + B_2) - A_3*(B_1 + B_2),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_3),B_0*(A_0 + A_1) - B_2*(A_0 + A_1 + A_2 + A_3),-A_3*B_0 + (B_1 + B_2)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
258. CASE:[4, 3] A_0 B_0 A_1 B_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_3)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_0+A_2+A_3)-B_2*(A_0+A_1+A_3)==0,A_3>0,A_0*B_2-A_3*B_0==0,B_2*(A_0+A_1)-(A_2+A_3)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_3),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_0 + A_2 + A_3) - B_2*(A_0 + A_1 + A_3),A_0*B_2 - A_3*B_0,B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
260. CASE:[4, 3] A_0 A_1 B_0 B_1 A_2 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_2==0,B_0>0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1)-A_2*B_2==0,A_3>0,A_0*B_2-A_3*B_2==0,B_2>0,B_0*(A_0+A_1+A_2+A_3)-B_2*(A_0+A_1)==0,B_2*(A_0+A_1)-(A_2+A_3)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, A_3, B_2 = QQ["A_0, A_1, B_0, B_1, A_2, A_3, B_2"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_0 + B_1) - A_2*B_2,A_0*B_2 - A_3*B_2,B_0*(A_0 + A_1 + A_2 + A_3) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
261. CASE:[4, 3] A_0 A_1 B_0 B_1 A_2 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_2==0,B_0>0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1)-A_2*B_2==0,A_3>0,A_0*B_2-A_3*B_2==0,B_2>0,B_0*(A_2+A_3+Max(A_2,A_0+A_1))-B_2*(A_0+A_1)==0,B_2*(A_0+A_1)-(A_2+A_3)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, A_3, B_2 = QQ["A_0, A_1, B_0, B_1, A_2, A_3, B_2"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_0 + B_1) - A_2*B_2,A_0*B_2 - A_3*B_2,B_0*(A_2 + A_3 + A_2) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*B_2,0,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_0 + B_1) - A_2*B_2,A_0*B_2 - A_3*B_2,B_0*(A_2 + A_3 + A_0 + A_1) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
263. CASE:[4, 3] A_0 A_1 B_0 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_2+B_3)==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2+B_3)-A_2*(B_2+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,B_0*(A_0+A_1)-B_3*(A_0+A_1)==0,-A_2*(B_0+B_1)+(A_0+A_1)*(B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, B_3 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*(B_2 + B_3),0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2 + B_3) - A_2*(B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),B_0*(A_0 + A_1) - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
264. CASE:[4, 3] A_0 A_1 B_0 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_2+B_3)==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+B_3+Max(B_3,B_0+B_1))-A_2*(B_2+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,B_0*(A_0+A_1)-B_3*(A_0+A_1)==0,-A_2*(B_0+B_1)+(A_0+A_1)*(B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, B_3 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*(B_2 + B_3),0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_3) - A_2*(B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),B_0*(A_0 + A_1) - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*(B_2 + B_3),0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_0 + B_1) - A_2*(B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),B_0*(A_0 + A_1) - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
266. CASE:[4, 3] A_0 B_0 A_1 B_1 A_2 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2)==0,A_3>0,A_0*B_2-A_3*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_2+A_3)-B_2*(A_0+A_1)==0,B_2*(A_0+A_1)-(A_2+A_3)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_1 - A_2*(B_0 + B_2),A_0*B_2 - A_3*(B_0 + B_2),B_0*(A_0 + A_2 + A_3) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
267. CASE:[4, 3] A_0 B_0 A_1 B_1 A_2 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*Max(B_1,B_2)-A_2*B_0==0,A_3>0,A_0*B_2-A_3*B_0==0,B_2>0,B_0*(A_2+A_3+Max(A_0,A_2+A_3))-B_2*(A_0+A_1)==0,B_2*(A_0+A_1)-(A_2+A_3)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_1 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_2 + A_3 + A_0) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_1 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_2 + A_3 + A_2 + A_3) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_2 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_2 + A_3 + A_0) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_2 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_2 + A_3 + A_2 + A_3) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
268. CASE:[4, 3] A_0 B_0 A_1 B_1 A_2 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2)==0,A_3>0,A_0*B_2-A_3*(B_0+B_2)==0,B_2>0,B_0*(A_2+A_3+Max(A_0,A_2))-B_2*(A_0+A_1)==0,B_2*(A_0+A_1)-(A_2+A_3)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_1 - A_2*(B_0 + B_2),A_0*B_2 - A_3*(B_0 + B_2),B_0*(A_2 + A_3 + A_0) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_1 - A_2*(B_0 + B_2),A_0*B_2 - A_3*(B_0 + B_2),B_0*(A_2 + A_3 + A_2) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
269. CASE:[4, 3] A_0 B_0 A_1 B_1 A_2 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*Max(B_1,B_2)-A_2*B_0==0,A_3>0,A_0*B_2-A_3*B_0==0,B_2>0,B_0*(A_2+A_3+Max(A_0,A_2+A_3))-B_2*(A_0+A_1)==0,B_2*(A_0+A_1)-(A_2+A_3)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*B_1 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_2 + A_3 + A_0) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*B_1 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_2 + A_3 + A_2 + A_3) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*B_2 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_2 + A_3 + A_0) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*B_2 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_2 + A_3 + A_2 + A_3) - B_2*(A_0 + A_1),B_2*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
271. CASE:[4, 3] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_2+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,A_0*B_0-B_3*(A_0+A_1)==0,-A_2*(B_0+B_1)+(A_0+A_1)*(B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),A_0*B_0 - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
272. CASE:[4, 3] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+B_3+Max(B_1,B_3))-A_2*(B_0+B_2+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,A_0*B_0-B_3*(A_0+A_1)==0,-A_2*(B_0+B_1)+(A_0+A_1)*(B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_1) - A_2*(B_0 + B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),A_0*B_0 - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_3) - A_2*(B_0 + B_2 + B_3),A_2*B_0 - B_2*(A_0 + A_1),A_0*B_0 - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
273. CASE:[4, 3] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_3)==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+B_3+Max(B_1,B_2+B_3))-A_2*(B_0+B_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,B_0*Max(A_0,A_2)-B_3*(A_0+A_1)==0,-A_2*(B_0+B_1)+(A_0+A_1)*(B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_1) - A_2*(B_0 + B_3),A_2*B_0 - B_2*(A_0 + A_1),B_0*A_0 - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_1) - A_2*(B_0 + B_3),A_2*B_0 - B_2*(A_0 + A_1),B_0*A_2 - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_2 + B_3) - A_2*(B_0 + B_3),A_2*B_0 - B_2*(A_0 + A_1),B_0*A_0 - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_2 + B_3) - A_2*(B_0 + B_3),A_2*B_0 - B_2*(A_0 + A_1),B_0*A_2 - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
274. CASE:[4, 3] A_0 B_0 A_1 B_1 A_2 B_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['r'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+B_3+Max(B_1,B_2+B_3))-A_2*B_0==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,B_3>0,B_0*Max(A_0,A_2)-B_3*(A_0+A_1)==0,-A_2*(B_0+B_1)+(A_0+A_1)*(B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_1) - A_2*B_0,A_2*B_0 - B_2*(A_0 + A_1),B_0*A_0 - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_1) - A_2*B_0,A_2*B_0 - B_2*(A_0 + A_1),B_0*A_2 - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_2 + B_3) - A_2*B_0,A_2*B_0 - B_2*(A_0 + A_1),B_0*A_0 - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3 + B_2 + B_3) - A_2*B_0,A_2*B_0 - B_2*(A_0 + A_1),B_0*A_2 - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
276. CASE:[4, 3] A_0 B_0 A_1 A_2 B_1 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_2+A_3)==0,B_2>0,B_0*(A_0+A_3)-B_2*(A_0+A_1+A_2+A_3)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,-A_3*B_0+(B_1+B_2)*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2, A_3 = QQ["A_0, B_0, A_1, A_2, B_1, B_2, A_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2 + A_3),B_0*(A_0 + A_3) - B_2*(A_0 + A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_3*B_0,-A_3*B_0 + (B_1 + B_2)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
277. CASE:[4, 3] A_0 A_1 B_0 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,A_2>0,A_0*(B_0+B_1)-A_2*B_2==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_2==0,B_2>0,B_0*(A_0+A_1+A_3)-B_2*(A_0+A_1+A_2)==0,-A_3*B_0+(B_1+B_2)*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, B_2 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_0 + A_1 + A_3) - B_2*(A_0 + A_1 + A_2),-A_3*B_0 + (B_1 + B_2)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
278. CASE:[4, 3] A_0 B_0 A_1 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_2)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_3)-B_2*(A_0+A_1+A_2)==0,-A_3*B_0+(B_1+B_2)*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2),A_0*B_1 - A_2*(B_0 + B_2),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*(B_0 + B_2),B_0*(A_0 + A_3) - B_2*(A_0 + A_1 + A_2),-A_3*B_0 + (B_1 + B_2)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
279. CASE:[4, 3] A_0 B_0 A_1 B_1 B_2 A_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_3)==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_3)==0,B_3>0,B_0*(A_0+A_2)-B_3*(A_0+A_1)==0,-A_2*(B_0+B_1)+(A_0+A_1)*(B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2, B_3 = QQ["A_0, B_0, A_1, B_1, B_2, A_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3),A_1*B_0 - B_1*(A_0 + A_1),A_2*B_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_3),B_0*(A_0 + A_2) - B_3*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
281. CASE:[5, 2] A_0 B_0 A_1 B_1 A_2 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2)==0,A_3>0,A_0*B_2-A_3*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_2+A_3)-B_2*(A_0+A_1)==0,-A_3*(B_0+B_1)+B_2*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_1 - A_2*(B_0 + B_2),A_0*B_2 - A_3*(B_0 + B_2),B_0*(A_0 + A_2 + A_3) - B_2*(A_0 + A_1),-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
282. CASE:[5, 2] A_0 B_0 A_1 B_1 A_2 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*B_1-A_2*B_0==0,A_3>0,2*A_0*B_2-A_3*B_0==0,B_2>0,B_0*(A_2+A_3+Max(A_0,A_3))-B_2*(A_0+A_1)==0,-A_3*(B_0+B_1)+B_2*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_1 - A_2*B_0,2*A_0*B_2 - A_3*B_0,B_0*(A_2 + A_3 + A_0) - B_2*(A_0 + A_1),-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_1 - A_2*B_0,2*A_0*B_2 - A_3*B_0,B_0*(A_2 + A_3 + A_3) - B_2*(A_0 + A_1),-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
283. CASE:[5, 2] A_0 B_0 A_1 B_1 A_2 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2)==0,A_3>0,A_0*B_2-A_3*(B_0+B_2)==0,B_2>0,B_0*(A_0+A_2+A_3)-B_2*(A_0+A_1)==0,-A_3*(B_0+B_1)+B_2*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_1 - A_2*(B_0 + B_2),A_0*B_2 - A_3*(B_0 + B_2),B_0*(A_0 + A_2 + A_3) - B_2*(A_0 + A_1),-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
284. CASE:[5, 2] A_0 B_0 A_1 B_1 A_2 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*B_1-A_2*B_0==0,A_3>0,2*A_0*B_2-A_3*B_0==0,B_2>0,B_0*(A_2+A_3+Max(A_0,A_3))-B_2*(A_0+A_1)==0,-A_3*(B_0+B_1)+B_2*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_1 - A_2*B_0,2*A_0*B_2 - A_3*B_0,B_0*(A_2 + A_3 + A_0) - B_2*(A_0 + A_1),-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_1 - A_2*B_0,2*A_0*B_2 - A_3*B_0,B_0*(A_2 + A_3 + A_3) - B_2*(A_0 + A_1),-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
285. CASE:[5, 2] A_0 A_1 B_0 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,A_2>0,A_0*(B_0+B_1)-A_2*B_2==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_2==0,B_2>0,B_0*(A_0+A_1+A_3)-B_2*(A_0+A_1+A_2)==0,-A_3*(B_0+B_1)+B_2*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, B_2 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_0 + A_1 + A_3) - B_2*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
287. CASE:[5, 2] A_0 A_1 B_0 A_2 B_1 A_3 B_2
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,A_2>0,A_0*(B_0+B_1)-A_2*B_2==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_2==0,B_2>0,B_0*(A_0+A_1+A_3)-B_2*(A_0+A_1+A_2)==0,-A_3*(B_0+B_1)+B_2*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, B_2 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_0 + A_1 + A_3) - B_2*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
289. CASE:[5, 2] A_0 B_0 A_1 B_1 B_2 A_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_3)==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_3)==0,B_3>0,B_0*(A_0+A_2)-B_3*(A_0+A_1)==0,-A_2*(B_0+B_1+B_2)+B_3*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2, B_3 = QQ["A_0, B_0, A_1, B_1, B_2, A_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3),A_1*B_0 - B_1*(A_0 + A_1),A_2*B_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_3),B_0*(A_0 + A_2) - B_3*(A_0 + A_1),-A_2*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
291. CASE:[5, 2] A_0 B_0 A_1 B_1 B_2 A_2 B_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_3)==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_3)==0,B_3>0,B_0*(A_0+A_2)-B_3*(A_0+A_1)==0,-A_2*(B_0+B_1+B_2)+B_3*(A_0+A_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2, B_3 = QQ["A_0, B_0, A_1, B_1, B_2, A_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3),A_1*B_0 - B_1*(A_0 + A_1),A_2*B_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_3),B_0*(A_0 + A_2) - B_3*(A_0 + A_1),-A_2*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
293. CASE:[5, 2] A_0 B_0 A_1 B_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_3)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_0+A_2+A_3)-B_2*(A_0+A_1+A_3)==0,A_3>0,A_0*B_2-A_3*B_0==0,-A_3*(B_0+B_1)+B_2*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_3),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_0 + A_2 + A_3) - B_2*(A_0 + A_1 + A_3),A_0*B_2 - A_3*B_0,-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
294. CASE:[5, 2] A_0 B_0 A_1 B_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*B_1-A_2*B_0==0,B_2>0,B_0*(A_0+A_3+Max(A_2,A_3))-B_2*(A_0+A_1)==0,A_3>0,2*A_0*B_2-A_3*B_0==0,-A_3*(B_0+B_1)+B_2*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_2) - B_2*(A_0 + A_1),2*A_0*B_2 - A_3*B_0,-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_3) - B_2*(A_0 + A_1),2*A_0*B_2 - A_3*B_0,-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
295. CASE:[5, 2] A_0 B_0 A_1 B_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['l']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_3)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_0+A_2+A_3)-B_2*(A_0+A_1+A_3)==0,A_3>0,A_0*B_2-A_3*B_0==0,-A_3*(B_0+B_1)+B_2*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_3),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_0 + A_2 + A_3) - B_2*(A_0 + A_1 + A_3),A_0*B_2 - A_3*B_0,-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
296. CASE:[5, 2] A_0 B_0 A_1 B_1 A_2 B_2 A_3
[['l'], ['l'], ['l'], ['l'], ['l'], ['l'], ['r']]

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*B_1-A_2*B_0==0,B_2>0,B_0*(A_0+A_3+Max(A_2,A_3))-B_2*(A_0+A_1)==0,A_3>0,2*A_0*B_2-A_3*B_0==0,-A_3*(B_0+B_1)+B_2*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_2) - B_2*(A_0 + A_1),2*A_0*B_2 - A_3*B_0,-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*B_1 - A_2*B_0,B_0*(A_0 + A_3 + A_3) - B_2*(A_0 + A_1),2*A_0*B_2 - A_3*B_0,-A_3*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
