-----
CASE:[2, 6] A_0 B_0 A_1 A_2 B_1 A_3 B_2 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2+A_4)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_2>0,B_0*(A_0+A_3+A_4)-B_2*(A_0+A_1+A_2+A_4)==0,A_4>0,A_0*B_2-A_4*B_0==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3+A_4)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2, A_4 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2, A_4"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_4),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_0 + A_3 + A_4) - B_2*(A_0 + A_1 + A_2 + A_4),A_0*B_2 - A_4*B_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3 + A_4),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[2, 6] A_0 B_0 A_1 B_1 A_2 B_2 A_3 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_4)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_2+A_3+A_4)-B_2*(A_0+A_1+A_4)==0,A_3>0,A_0*B_2-A_3*B_0==0,A_4>0,-A_4*B_0==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3+A_4)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_4),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_3 + A_4) - B_2*(A_0 + A_1 + A_4),A_0*B_2 - A_3*B_0,-A_4*B_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3 + A_4),A_0-1,B_0-1),
]
Solution 1:
(1, 1, -1, -1, 0, 1, 0, -1)
-----
CASE:[2, 6] A_0 B_0 A_1 A_2 B_1 A_3 B_2 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2+A_4)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_2>0,B_0*(A_0+A_3+A_4)-B_2*(A_0+A_1+A_2+A_4)==0,A_4>0,A_0*B_2-A_4*B_0==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3+A_4)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2, A_4 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2, A_4"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_4),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_0 + A_3 + A_4) - B_2*(A_0 + A_1 + A_2 + A_4),A_0*B_2 - A_4*B_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3 + A_4),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[2, 6] A_0 B_0 A_1 B_1 A_2 B_2 A_3 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_4)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_2+A_3+A_4)-B_2*(A_0+A_1+A_4)==0,A_3>0,A_0*B_2-A_3*B_0==0,A_4>0,-A_4*B_0==0,A_0*(B_1+B_2)-B_0*(A_1+A_2+A_3+A_4)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_4),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_3 + A_4) - B_2*(A_0 + A_1 + A_4),A_0*B_2 - A_3*B_0,-A_4*B_0,A_0*(B_1 + B_2) - B_0*(A_1 + A_2 + A_3 + A_4),A_0-1,B_0-1),
]
Solution 1:
(1, 1, -1, -1, 0, 1, 0, -1)
-----
CASE:[2, 6] A_0 B_0 A_1 A_2 B_1 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_2+B_3)-A_1*(B_0+B_2+B_3)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2+B_3)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*(B_0+B_2+B_3)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,B_3>0,B_0*Max(A_0,A_1+A_2)-B_3*(A_0+A_1+A_2)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2, B_3 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2 + B_3),A_0*B_1 - A_2*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_0 + B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_0 - B_3*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2 + B_3),A_0*B_1 - A_2*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_0 + B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_1 + A_2 - B_3*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 + B_3 - A_1*(B_0 + B_2 + B_3),A_0*B_1 - A_2*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_0 + B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_0 - B_3*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 + B_3 - A_1*(B_0 + B_2 + B_3),A_0*B_1 - A_2*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_0 + B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_1 + A_2 - B_3*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[2, 6] A_0 B_0 A_1 B_1 A_2 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_3))-A_1*(B_0+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_3)==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,A_3>0,A_0*(B_2+B_3)-A_3*(B_0+B_3)==0,B_3>0,B_0*(A_3+Max(A_0,A_1))-B_3*(A_0+A_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_0) - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_1) - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_3) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_0) - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_3) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_1) - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[2, 6] A_0 B_0 A_1 A_2 B_1 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*Max(B_0,B_2+B_3)-A_1*(B_0+B_2+B_3)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2+B_3)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*(B_0+B_2+B_3)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,B_3>0,B_0*Max(A_0,A_1+A_2)-B_3*(A_0+A_1+A_2)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2, B_3 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2 + B_3),A_0*B_1 - A_2*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_0 + B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_0 - B_3*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2 + B_3),A_0*B_1 - A_2*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_0 + B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_1 + A_2 - B_3*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 + B_3 - A_1*(B_0 + B_2 + B_3),A_0*B_1 - A_2*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_0 + B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_0 - B_3*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_2 + B_3 - A_1*(B_0 + B_2 + B_3),A_0*B_1 - A_2*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_0 + B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_1 + A_2 - B_3*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[2, 6] A_0 B_0 A_1 B_1 A_2 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_1+Max(B_0,B_3))-A_1*(B_0+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_3)==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,A_3>0,A_0*(B_2+B_3)-A_3*(B_0+B_3)==0,B_3>0,B_0*(A_3+Max(A_0,A_1))-B_3*(A_0+A_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_0) - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_0) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_1) - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_3) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_0) - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_1 + B_3) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_1) - B_3*(A_0 + A_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[2, 6] A_0 A_1 B_0 B_1 A_2 B_2 A_3 A_4

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)==0,B_0>0,B_1>0,A_2*B_0-B_1*Max(A_0+A_1,A_3+A_4)==0,A_2>0,A_0*(B_0+B_1+B_2)==0,B_2>0,B_0*(A_2+A_3+A_4)-B_2*Max(A_0+A_1,A_3+A_4)==0,A_3>0,A_0*B_2==0,A_4>0,A_0*(B_0+B_1)==0,(A_0+A_1)*(B_0+B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, A_3, A_4 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, A_3, A_4"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1),0,A_2*B_0 - B_1*A_0 + A_1,A_0*(B_0 + B_1 + B_2),B_0*(A_2 + A_3 + A_4) - B_2*A_0 + A_1,A_0*B_2,A_0*(B_0 + B_1),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1),0,A_2*B_0 - B_1*A_0 + A_1,A_0*(B_0 + B_1 + B_2),B_0*(A_2 + A_3 + A_4) - B_2*A_3 + A_4,A_0*B_2,A_0*(B_0 + B_1),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1),0,A_2*B_0 - B_1*A_3 + A_4,A_0*(B_0 + B_1 + B_2),B_0*(A_2 + A_3 + A_4) - B_2*A_0 + A_1,A_0*B_2,A_0*(B_0 + B_1),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1),0,A_2*B_0 - B_1*A_3 + A_4,A_0*(B_0 + B_1 + B_2),B_0*(A_2 + A_3 + A_4) - B_2*A_3 + A_4,A_0*B_2,A_0*(B_0 + B_1),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[2, 6] A_0 A_1 B_0 B_1 A_2 B_2 A_3 A_4

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)==0,B_0>0,B_1>0,A_2*B_0-B_1*Max(A_0+A_1,A_3+A_4)==0,A_2>0,A_0*(B_0+B_1+B_2)==0,B_2>0,B_0*(A_2+A_3+A_4)-B_2*Max(A_0+A_1,A_3+A_4)==0,A_3>0,A_0*B_2==0,A_4>0,A_0*(B_0+B_1)==0,(A_0+A_1)*(B_0+B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, A_3, A_4 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, A_3, A_4"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1),0,A_2*B_0 - B_1*A_0 + A_1,A_0*(B_0 + B_1 + B_2),B_0*(A_2 + A_3 + A_4) - B_2*A_0 + A_1,A_0*B_2,A_0*(B_0 + B_1),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1),0,A_2*B_0 - B_1*A_0 + A_1,A_0*(B_0 + B_1 + B_2),B_0*(A_2 + A_3 + A_4) - B_2*A_3 + A_4,A_0*B_2,A_0*(B_0 + B_1),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1),0,A_2*B_0 - B_1*A_3 + A_4,A_0*(B_0 + B_1 + B_2),B_0*(A_2 + A_3 + A_4) - B_2*A_0 + A_1,A_0*B_2,A_0*(B_0 + B_1),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1),0,A_2*B_0 - B_1*A_3 + A_4,A_0*(B_0 + B_1 + B_2),B_0*(A_2 + A_3 + A_4) - B_2*A_3 + A_4,A_0*B_2,A_0*(B_0 + B_1),(A_0 + A_1)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[2, 6] A_0 A_1 B_0 A_2 B_1 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_2+B_3)==0,B_0>0,A_2>0,A_0*(B_0+B_1)-A_2*(B_2+B_3)==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*(B_2+B_3)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,B_3>0,B_0*(A_0+A_1)-B_3*(A_0+A_1+A_2)==0,(A_0+A_1)*(B_0+B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_0*(B_0 + B_1) - A_2*(B_2 + B_3),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*(A_0 + A_1) - B_3*(A_0 + A_1 + A_2),(A_0 + A_1)*(B_0 + B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[2, 6] A_0 A_1 B_0 B_1 A_2 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_3==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*B_3==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,A_3>0,A_0*(B_2+B_3)-A_3*B_3==0,B_3>0,B_0*(A_0+A_1+A_3)-B_3*(A_0+A_1)==0,(A_0+A_1)*(B_0+B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, A_3, B_3 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, A_3, B_3"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_3,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2) - A_2*B_3,B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*B_3,B_0*(A_0 + A_1 + A_3) - B_3*(A_0 + A_1),(A_0 + A_1)*(B_0 + B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[2, 6] A_0 A_1 B_0 A_2 B_1 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_2+B_3)==0,B_0>0,A_2>0,A_0*(B_0+B_1)-A_2*(B_2+B_3)==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*(B_2+B_3)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,B_3>0,B_0*(A_0+A_1)-B_3*(A_0+A_1+A_2)==0,(A_0+A_1)*(B_0+B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_0*(B_0 + B_1) - A_2*(B_2 + B_3),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*(A_0 + A_1) - B_3*(A_0 + A_1 + A_2),(A_0 + A_1)*(B_0 + B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[2, 6] A_0 A_1 B_0 B_1 A_2 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_3==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*B_3==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,A_3>0,A_0*(B_2+B_3)-A_3*B_3==0,B_3>0,B_0*(A_0+A_1+A_3)-B_3*(A_0+A_1)==0,(A_0+A_1)*(B_0+B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, A_3, B_3 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, A_3, B_3"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_3,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2) - A_2*B_3,B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*B_3,B_0*(A_0 + A_1 + A_3) - B_3*(A_0 + A_1),(A_0 + A_1)*(B_0 + B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[2, 6] A_0 B_0 B_1 A_1 B_2 A_2 B_3 A_3

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,B_0*(A_1+A_3)-B_1*(A_0+A_3)==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1)==0,B_2>0,B_0*(A_1+A_2)-B_2*(A_0+A_3)==0,A_2>0,A_0*(B_2+B_3)-A_2*(B_0+B_1)==0,B_3>0,B_0*(A_0+A_2+A_3)-B_3*(A_0+A_3)==0,A_3>0,A_0*(B_1+B_3)-A_3*(B_0+B_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2, B_3, A_3 = QQ["A_0, B_0, B_1, A_1, B_2, A_2, B_3, A_3"].gens()
I_list = [ideal(0,0,B_0*(A_1 + A_3) - B_1*(A_0 + A_3),A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1),B_0*(A_1 + A_2) - B_2*(A_0 + A_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1),B_0*(A_0 + A_2 + A_3) - B_3*(A_0 + A_3),A_0*(B_1 + B_3) - A_3*(B_0 + B_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
Solution 1:
(1, 0, -1, 0, 1, 0, -1, 0)
Solution 2:
(1, (28**(1/3)/6 + (98 + 294*sqrt(3)*I)**(1/3)/3 + 28**(1/3)*sqrt(3)*I/2 + 5*(1 + 3*sqrt(3)*I)**(2/3)/3)/(1 + 3*sqrt(3)*I)**(2/3), (-sqrt(3) - 2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/3 - 2*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/3 - 4*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/3 - 13*I/3 - 2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/3)/(3*sqrt(3) + 13*I), (-13*sqrt(3) - 19*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/6 - 55*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/6 - 17*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/6 - 71*I/3 + 23*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/6)/(39*sqrt(3) + 71*I), 1, (-13*sqrt(3) - 19*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/6 - 55*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/6 - 17*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/6 - 71*I/3 + 23*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/6)/(39*sqrt(3) + 71*I), (-sqrt(3) - 2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/3 - 2*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/3 - 4*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/3 - 13*I/3 - 2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/3)/(3*sqrt(3) + 13*I), 5/3 + 7/(9*(7/54 + 7*sqrt(3)*I/18)**(1/3)) + (7/54 + 7*sqrt(3)*I/18)**(1/3))
Solution 3:
(1, (5*sqrt(3)/3 - 25*I/3 - sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/2 - 98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/6 + I*(28 + 84*sqrt(3)*I)**(1/3)/6 + sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/6)/(sqrt(3) - 5*I), (-sqrt(3) - 13*I/3 - 5*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/18 - 5*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/18 + 2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/9 + sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/18 + 11*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/18 + 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/9 + 14*I*(28 + 84*sqrt(3)*I)**(1/3)/9 + 4*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/9)/(3*sqrt(3) + 13*I), (-13*sqrt(3) - 71*I/3 - 37*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/18 - 23*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/18 - 8*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/9 - sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/18 + 47*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/9 + 133*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 119*I*(28 + 84*sqrt(3)*I)**(1/3)/18 + 55*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/18)/(39*sqrt(3) + 71*I), 1, (-13*sqrt(3) - 71*I/3 - 37*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/18 - 23*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/18 - 8*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/9 - sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/18 + 47*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/9 + 133*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 119*I*(28 + 84*sqrt(3)*I)**(1/3)/18 + 55*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/18)/(39*sqrt(3) + 71*I), (-sqrt(3) - 13*I/3 - 5*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/18 - 5*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/18 + 2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/9 + sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/18 + 11*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/18 + 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/9 + 14*I*(28 + 84*sqrt(3)*I)**(1/3)/9 + 4*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/9)/(3*sqrt(3) + 13*I), 5/3 + (-1/2 - sqrt(3)*I/2)*(7/54 + 7*sqrt(3)*I/18)**(1/3) + 7/(9*(-1/2 - sqrt(3)*I/2)*(7/54 + 7*sqrt(3)*I/18)**(1/3)))
Solution 4:
(1, (5*sqrt(3)/3 - sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/12 - sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/4 - 98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/12 + I*(28 + 84*sqrt(3)*I)**(1/3)/12 + 10*I/3)/(sqrt(3) + 2*I), (-sqrt(3) - 35*I*(28 + 84*sqrt(3)*I)**(1/3)/18 - 5*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/18 - 13*I/3 + 2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/9 + 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 4*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/9 + 2*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/9 + sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/9 + 11*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/18)/(3*sqrt(3) + 13*I), (-13*sqrt(3) - 259*I*(28 + 84*sqrt(3)*I)**(1/3)/18 - 71*I/3 - 8*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/9 - 23*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/18 - 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 17*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/18 + 55*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/18 + 19*sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/18 + 47*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/9)/(39*sqrt(3) + 71*I), 1, (-13*sqrt(3) - 259*I*(28 + 84*sqrt(3)*I)**(1/3)/18 - 71*I/3 - 8*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/9 - 23*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/18 - 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 17*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/18 + 55*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/18 + 19*sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/18 + 47*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/9)/(39*sqrt(3) + 71*I), (-sqrt(3) - 35*I*(28 + 84*sqrt(3)*I)**(1/3)/18 - 5*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/18 - 13*I/3 + 2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/9 + 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 4*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/9 + 2*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/9 + sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/9 + 11*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/18)/(3*sqrt(3) + 13*I), 5/3 + 7/(9*(-1/2 + sqrt(3)*I/2)*(7/54 + 7*sqrt(3)*I/18)**(1/3)) + (-1/2 + sqrt(3)*I/2)*(7/54 + 7*sqrt(3)*I/18)**(1/3))
-----
CASE:[2, 6] A_0 B_0 B_1 A_1 B_2 A_2 B_3 A_3

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,B_0*(A_1+A_3)-B_1*(A_0+A_3)==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1)==0,B_2>0,B_0*(A_1+A_2)-B_2*(A_0+A_3)==0,A_2>0,A_0*(B_2+B_3)-A_2*(B_0+B_1)==0,B_3>0,B_0*(A_0+A_2+A_3)-B_3*(A_0+A_3)==0,A_3>0,A_0*(B_1+B_3)-A_3*(B_0+B_1)==0,A_0*(B_1+B_2+B_3)-B_0*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2, B_3, A_3 = QQ["A_0, B_0, B_1, A_1, B_2, A_2, B_3, A_3"].gens()
I_list = [ideal(0,0,B_0*(A_1 + A_3) - B_1*(A_0 + A_3),A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1),B_0*(A_1 + A_2) - B_2*(A_0 + A_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1),B_0*(A_0 + A_2 + A_3) - B_3*(A_0 + A_3),A_0*(B_1 + B_3) - A_3*(B_0 + B_1),A_0*(B_1 + B_2 + B_3) - B_0*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
Solution 1:
(1, 0, -1, 0, 1, 0, -1, 0)
Solution 2:
(1, (28**(1/3)/6 + (98 + 294*sqrt(3)*I)**(1/3)/3 + 28**(1/3)*sqrt(3)*I/2 + 5*(1 + 3*sqrt(3)*I)**(2/3)/3)/(1 + 3*sqrt(3)*I)**(2/3), (-sqrt(3) - 2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/3 - 2*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/3 - 4*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/3 - 13*I/3 - 2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/3)/(3*sqrt(3) + 13*I), (-13*sqrt(3) - 19*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/6 - 55*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/6 - 17*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/6 - 71*I/3 + 23*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/6)/(39*sqrt(3) + 71*I), 1, (-13*sqrt(3) - 19*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/6 - 55*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/6 - 17*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/6 - 71*I/3 + 23*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/6)/(39*sqrt(3) + 71*I), (-sqrt(3) - 2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/3 - 2*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/3 - 4*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/3 - 13*I/3 - 2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/3)/(3*sqrt(3) + 13*I), 5/3 + 7/(9*(7/54 + 7*sqrt(3)*I/18)**(1/3)) + (7/54 + 7*sqrt(3)*I/18)**(1/3))
Solution 3:
(1, (5*sqrt(3)/3 - 25*I/3 - sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/2 - 98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/6 + I*(28 + 84*sqrt(3)*I)**(1/3)/6 + sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/6)/(sqrt(3) - 5*I), (-sqrt(3) - 13*I/3 - 5*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/18 - 5*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/18 + 2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/9 + sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/18 + 11*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/18 + 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/9 + 14*I*(28 + 84*sqrt(3)*I)**(1/3)/9 + 4*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/9)/(3*sqrt(3) + 13*I), (-13*sqrt(3) - 71*I/3 - 37*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/18 - 23*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/18 - 8*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/9 - sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/18 + 47*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/9 + 133*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 119*I*(28 + 84*sqrt(3)*I)**(1/3)/18 + 55*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/18)/(39*sqrt(3) + 71*I), 1, (-13*sqrt(3) - 71*I/3 - 37*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/18 - 23*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/18 - 8*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/9 - sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/18 + 47*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/9 + 133*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 119*I*(28 + 84*sqrt(3)*I)**(1/3)/18 + 55*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/18)/(39*sqrt(3) + 71*I), (-sqrt(3) - 13*I/3 - 5*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/18 - 5*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/18 + 2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/9 + sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/18 + 11*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/18 + 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/9 + 14*I*(28 + 84*sqrt(3)*I)**(1/3)/9 + 4*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/9)/(3*sqrt(3) + 13*I), 5/3 + (-1/2 - sqrt(3)*I/2)*(7/54 + 7*sqrt(3)*I/18)**(1/3) + 7/(9*(-1/2 - sqrt(3)*I/2)*(7/54 + 7*sqrt(3)*I/18)**(1/3)))
Solution 4:
(1, (5*sqrt(3)/3 - sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/12 - sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/4 - 98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/12 + I*(28 + 84*sqrt(3)*I)**(1/3)/12 + 10*I/3)/(sqrt(3) + 2*I), (-sqrt(3) - 35*I*(28 + 84*sqrt(3)*I)**(1/3)/18 - 5*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/18 - 13*I/3 + 2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/9 + 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 4*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/9 + 2*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/9 + sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/9 + 11*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/18)/(3*sqrt(3) + 13*I), (-13*sqrt(3) - 259*I*(28 + 84*sqrt(3)*I)**(1/3)/18 - 71*I/3 - 8*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/9 - 23*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/18 - 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 17*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/18 + 55*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/18 + 19*sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/18 + 47*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/9)/(39*sqrt(3) + 71*I), 1, (-13*sqrt(3) - 259*I*(28 + 84*sqrt(3)*I)**(1/3)/18 - 71*I/3 - 8*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/9 - 23*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/18 - 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 17*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/18 + 55*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/18 + 19*sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/18 + 47*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/9)/(39*sqrt(3) + 71*I), (-sqrt(3) - 35*I*(28 + 84*sqrt(3)*I)**(1/3)/18 - 5*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/18 - 13*I/3 + 2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/9 + 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 4*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/9 + 2*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/9 + sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/9 + 11*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/18)/(3*sqrt(3) + 13*I), 5/3 + 7/(9*(-1/2 + sqrt(3)*I/2)*(7/54 + 7*sqrt(3)*I/18)**(1/3)) + (-1/2 + sqrt(3)*I/2)*(7/54 + 7*sqrt(3)*I/18)**(1/3))
-----
CASE:[2, 6] A_0 B_0 B_1 A_1 B_2 A_2 B_3 B_4

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1+B_3+B_4)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_2+B_3+B_4)-A_2*(B_0+B_1+B_3+B_4)==0,B_3>0,-A_0*B_3+A_2*B_0==0,B_4>0,A_0*B_0-A_0*B_4==0,A_0*(B_1+B_2+B_3+B_4)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2, B_3, B_4 = QQ["A_0, B_0, B_1, A_1, B_2, A_2, B_3, B_4"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1 + B_3 + B_4),-A_0*B_2 + B_0*(A_1 + A_2),A_0*(B_2 + B_3 + B_4) - A_2*(B_0 + B_1 + B_3 + B_4),-A_0*B_3 + A_2*B_0,A_0*B_0 - A_0*B_4,A_0*(B_1 + B_2 + B_3 + B_4) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[2, 6] A_0 B_0 B_1 A_1 B_2 A_2 B_3 B_4

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1+B_3+B_4)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_2+B_3+B_4)-A_2*(B_0+B_1+B_3+B_4)==0,B_3>0,-A_0*B_3+A_2*B_0==0,B_4>0,A_0*B_0-A_0*B_4==0,A_0*(B_1+B_2+B_3+B_4)-B_0*(A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2, B_3, B_4 = QQ["A_0, B_0, B_1, A_1, B_2, A_2, B_3, B_4"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1 + B_3 + B_4),-A_0*B_2 + B_0*(A_1 + A_2),A_0*(B_2 + B_3 + B_4) - A_2*(B_0 + B_1 + B_3 + B_4),-A_0*B_3 + A_2*B_0,A_0*B_0 - A_0*B_4,A_0*(B_1 + B_2 + B_3 + B_4) - B_0*(A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[3, 5] A_0 B_0 A_1 A_2 B_1 A_3 B_2 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2+A_4)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_2>0,B_0*(A_0+A_3+A_4)-B_2*(A_0+A_1+A_2+A_4)==0,A_4>0,A_0*B_2-A_4*B_0==0,-B_0*(A_2+A_3+A_4)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2, A_4 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2, A_4"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2 + A_4),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_0 + A_3 + A_4) - B_2*(A_0 + A_1 + A_2 + A_4),A_0*B_2 - A_4*B_0,-B_0*(A_2 + A_3 + A_4) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[3, 5] A_0 B_0 A_1 A_2 B_1 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_2+B_3)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*(B_0+B_2+B_3)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*(B_0+B_2+B_3)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,B_3>0,B_0*Max(A_0,A_2)-B_3*(A_0+A_1+A_2)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2, B_3 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2 + B_3),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_0 + B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_0 - B_3*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2 + B_3),A_0*(B_1 + B_2 + B_3) - A_2*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_0 + B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_2 - B_3*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
Solution 1:
(1, 1, -1, -1, 1, -1, -1, 1, 1)
Solution 2:
(1, 1, 1, 1, 1, 1, 1/3, -1/3, -1)
-----
CASE:[3, 5] A_0 B_0 B_1 A_1 A_2 B_2 A_3 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_4)==0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_1)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1)==0,B_2>0,B_0*(A_1+A_2+A_3+A_4)-B_2*(A_0+A_4)==0,A_3>0,A_0*B_2-A_3*(B_0+B_1)==0,A_4>0,-A_4*(B_0+B_1)==0,A_0*B_2-(B_0+B_1)*(A_1+A_2+A_3+A_4)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, A_3, A_4 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, A_3, A_4"].gens()
I_list = [ideal(0,0,B_0*(A_1 + A_2) - B_1*(A_0 + A_4),A_0*(B_0 + B_1) - A_1*(B_0 + B_1),A_0*B_2 - A_2*(B_0 + B_1),B_0*(A_1 + A_2 + A_3 + A_4) - B_2*(A_0 + A_4),A_0*B_2 - A_3*(B_0 + B_1),-A_4*(B_0 + B_1),A_0*B_2 - (B_0 + B_1)*(A_1 + A_2 + A_3 + A_4),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[3, 5] A_0 B_0 B_1 A_1 B_2 A_2 B_3 A_3

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,A_1*B_0-B_1*(A_0+A_3)==0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_1)==0,B_2>0,B_0*(A_1+A_2)-B_2*(A_0+A_3)==0,A_2>0,A_0*(B_2+B_3)-A_2*(B_0+B_1)==0,B_3>0,B_0*(A_0+A_2+A_3)-B_3*(A_0+A_3)==0,A_3>0,A_0*B_3-A_3*(B_0+B_1)==0,A_0*(B_2+B_3)-(B_0+B_1)*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2, B_3, A_3 = QQ["A_0, B_0, B_1, A_1, B_2, A_2, B_3, A_3"].gens()
I_list = [ideal(0,0,A_1*B_0 - B_1*(A_0 + A_3),A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_1),B_0*(A_1 + A_2) - B_2*(A_0 + A_3),A_0*(B_2 + B_3) - A_2*(B_0 + B_1),B_0*(A_0 + A_2 + A_3) - B_3*(A_0 + A_3),A_0*B_3 - A_3*(B_0 + B_1),A_0*(B_2 + B_3) - (B_0 + B_1)*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[3, 5] A_0 A_1 B_0 A_2 A_3 B_1 A_4 B_2

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,A_2>0,A_0*Max(B_0,B_2)-A_2*B_2==0,A_3>0,A_0*B_1-A_3*B_2==0,B_1>0,B_0*(A_2+A_3+A_4)-B_1*(A_0+A_1+A_2+A_3)==0,A_4>0,A_0*(B_1+B_2)-A_4*B_2==0,B_2>0,B_0*(A_4+Max(A_0+A_1,A_2+A_3))-B_2*(A_0+A_1+A_2+A_3)==0,-B_0*(A_2+A_3+A_4)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, A_3, B_1, A_4, B_2 = QQ["A_0, A_1, B_0, A_2, A_3, B_1, A_4, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_0 - A_2*B_2,A_0*B_1 - A_3*B_2,B_0*(A_2 + A_3 + A_4) - B_1*(A_0 + A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_4*B_2,B_0*(A_4 + A_0 + A_1) - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3 + A_4) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_0 - A_2*B_2,A_0*B_1 - A_3*B_2,B_0*(A_2 + A_3 + A_4) - B_1*(A_0 + A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_4*B_2,B_0*(A_4 + A_2 + A_3) - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3 + A_4) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_2 - A_2*B_2,A_0*B_1 - A_3*B_2,B_0*(A_2 + A_3 + A_4) - B_1*(A_0 + A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_4*B_2,B_0*(A_4 + A_0 + A_1) - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3 + A_4) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_2 - A_2*B_2,A_0*B_1 - A_3*B_2,B_0*(A_2 + A_3 + A_4) - B_1*(A_0 + A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_4*B_2,B_0*(A_4 + A_2 + A_3) - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_2 + A_3 + A_4) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[3, 5] A_0 A_1 B_0 A_2 B_1 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_2+B_3)==0,B_0>0,A_2>0,A_0*(B_1+Max(B_0,B_2+B_3))-A_2*(B_2+B_3)==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*(B_2+B_3)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,B_3>0,B_0*Max(A_2,A_0+A_1)-B_3*(A_0+A_1+A_2)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_0*(B_1 + B_0) - A_2*(B_2 + B_3),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_2 - B_3*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_0*(B_1 + B_0) - A_2*(B_2 + B_3),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_0 + A_1 - B_3*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_0*(B_1 + B_2 + B_3) - A_2*(B_2 + B_3),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_2 - B_3*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_0*(B_1 + B_2 + B_3) - A_2*(B_2 + B_3),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_0 + A_1 - B_3*(A_0 + A_1 + A_2),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[3, 5] A_0 B_0 B_1 A_1 A_2 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+B_0*(A_1+A_2)==0,A_1>0,A_0*Max(B_3,B_0+B_1)-A_1*(B_0+B_1+B_3)==0,A_2>0,A_0*B_2-A_2*(B_0+B_1+B_3)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2+A_3)==0,A_3>0,A_0*(B_2+B_3)-A_3*(B_0+B_1+B_3)==0,B_3>0,-A_0*B_3+B_0*(A_3+Max(A_0,A_1+A_2))==0,A_0*(B_2+B_3)-(B_0+B_1)*(A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, A_2, B_2, A_3, B_3 = QQ["A_0, B_0, B_1, A_1, A_2, B_2, A_3, B_3"].gens()
I_list = [ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_3 - A_1*(B_0 + B_1 + B_3),A_0*B_2 - A_2*(B_0 + B_1 + B_3),-A_0*B_2 + B_0*(A_1 + A_2 + A_3),A_0*(B_2 + B_3) - A_3*(B_0 + B_1 + B_3),-A_0*B_3 + B_0*(A_3 + A_0),A_0*(B_2 + B_3) - (B_0 + B_1)*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_3 - A_1*(B_0 + B_1 + B_3),A_0*B_2 - A_2*(B_0 + B_1 + B_3),-A_0*B_2 + B_0*(A_1 + A_2 + A_3),A_0*(B_2 + B_3) - A_3*(B_0 + B_1 + B_3),-A_0*B_3 + B_0*(A_3 + A_1 + A_2),A_0*(B_2 + B_3) - (B_0 + B_1)*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_0 + B_1 - A_1*(B_0 + B_1 + B_3),A_0*B_2 - A_2*(B_0 + B_1 + B_3),-A_0*B_2 + B_0*(A_1 + A_2 + A_3),A_0*(B_2 + B_3) - A_3*(B_0 + B_1 + B_3),-A_0*B_3 + B_0*(A_3 + A_0),A_0*(B_2 + B_3) - (B_0 + B_1)*(A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + B_0*(A_1 + A_2),A_0*B_0 + B_1 - A_1*(B_0 + B_1 + B_3),A_0*B_2 - A_2*(B_0 + B_1 + B_3),-A_0*B_2 + B_0*(A_1 + A_2 + A_3),A_0*(B_2 + B_3) - A_3*(B_0 + B_1 + B_3),-A_0*B_3 + B_0*(A_3 + A_1 + A_2),A_0*(B_2 + B_3) - (B_0 + B_1)*(A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[3, 5] A_0 B_0 B_1 A_1 B_2 A_2 B_3 B_4

FOR MATHEMATICA:
A_0>0,B_0>0,B_1>0,-A_0*B_1+A_1*B_0==0,A_1>0,A_0*(B_2+Max(B_0+B_1,B_3+B_4))-A_1*(B_0+B_1+B_3+B_4)==0,B_2>0,-A_0*B_2+B_0*(A_1+A_2)==0,A_2>0,A_0*(B_2+B_3+B_4)-A_2*(B_0+B_1+B_3+B_4)==0,B_3>0,-A_0*B_3+A_2*B_0==0,B_4>0,-A_0*B_4+B_0*Max(A_0,A_1)==0,A_0*(B_2+B_3+B_4)-(A_1+A_2)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, B_1, A_1, B_2, A_2, B_3, B_4 = QQ["A_0, B_0, B_1, A_1, B_2, A_2, B_3, B_4"].gens()
I_list = [ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_0 + B_1) - A_1*(B_0 + B_1 + B_3 + B_4),-A_0*B_2 + B_0*(A_1 + A_2),A_0*(B_2 + B_3 + B_4) - A_2*(B_0 + B_1 + B_3 + B_4),-A_0*B_3 + A_2*B_0,-A_0*B_4 + B_0*A_0,A_0*(B_2 + B_3 + B_4) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_0 + B_1) - A_1*(B_0 + B_1 + B_3 + B_4),-A_0*B_2 + B_0*(A_1 + A_2),A_0*(B_2 + B_3 + B_4) - A_2*(B_0 + B_1 + B_3 + B_4),-A_0*B_3 + A_2*B_0,-A_0*B_4 + B_0*A_1,A_0*(B_2 + B_3 + B_4) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_3 + B_4) - A_1*(B_0 + B_1 + B_3 + B_4),-A_0*B_2 + B_0*(A_1 + A_2),A_0*(B_2 + B_3 + B_4) - A_2*(B_0 + B_1 + B_3 + B_4),-A_0*B_3 + A_2*B_0,-A_0*B_4 + B_0*A_0,A_0*(B_2 + B_3 + B_4) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,-A_0*B_1 + A_1*B_0,A_0*(B_2 + B_3 + B_4) - A_1*(B_0 + B_1 + B_3 + B_4),-A_0*B_2 + B_0*(A_1 + A_2),A_0*(B_2 + B_3 + B_4) - A_2*(B_0 + B_1 + B_3 + B_4),-A_0*B_3 + A_2*B_0,-A_0*B_4 + B_0*A_1,A_0*(B_2 + B_3 + B_4) - (A_1 + A_2)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[3, 5] A_0 B_0 A_1 B_1 A_2 B_2 A_3 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_2+Max(A_1,A_3+A_4))-B_1*(A_0+A_1+A_4)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_2+A_3+A_4)-B_2*(A_0+A_1+A_4)==0,A_3>0,A_0*B_2-A_3*B_0==0,A_4>0,A_0*B_1-A_4*B_0==0,-B_0*(A_2+A_3+A_4)+(A_0+A_1)*(B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_2 + A_1) - B_1*(A_0 + A_1 + A_4),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_3 + A_4) - B_2*(A_0 + A_1 + A_4),A_0*B_2 - A_3*B_0,A_0*B_1 - A_4*B_0,-B_0*(A_2 + A_3 + A_4) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_2 + A_3 + A_4) - B_1*(A_0 + A_1 + A_4),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_3 + A_4) - B_2*(A_0 + A_1 + A_4),A_0*B_2 - A_3*B_0,A_0*B_1 - A_4*B_0,-B_0*(A_2 + A_3 + A_4) + (A_0 + A_1)*(B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[3, 5] A_0 B_0 A_1 B_1 B_2 A_2 B_3 A_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*B_0==0,B_1>0,B_0*Max(A_1,A_3)-B_1*(A_0+A_1+A_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1+A_3)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*B_0==0,B_3>0,B_0*(A_0+A_2+A_3)-B_3*(A_0+A_1+A_3)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*B_0==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2, B_3, A_3 = QQ["A_0, B_0, A_1, B_1, B_2, A_2, B_3, A_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*B_0,B_0*A_1 - B_1*(A_0 + A_1 + A_3),A_2*B_0 - B_2*(A_0 + A_1 + A_3),A_0*(B_1 + B_2 + B_3) - A_2*B_0,B_0*(A_0 + A_2 + A_3) - B_3*(A_0 + A_1 + A_3),A_0*(B_1 + B_2 + B_3) - A_3*B_0,-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*B_0,B_0*A_3 - B_1*(A_0 + A_1 + A_3),A_2*B_0 - B_2*(A_0 + A_1 + A_3),A_0*(B_1 + B_2 + B_3) - A_2*B_0,B_0*(A_0 + A_2 + A_3) - B_3*(A_0 + A_1 + A_3),A_0*(B_1 + B_2 + B_3) - A_3*B_0,-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
Solution 1:
(1, 0, 0, 0, 1, -1, 0, 1, -1)
Solution 2:
(1, 1, -1, -1, 1, 1, -1, -1, 1)
Solution 3:
(1, 1, 1, 1, 1, -1/3, 1/3, 1, -1)
-----
CASE:[3, 5] A_0 B_0 A_1 B_1 A_2 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_3)==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,A_3>0,A_0*(B_2+B_3)-A_3*(B_0+B_3)==0,B_3>0,B_0*(A_0+A_3)-B_3*(A_0+A_1)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_0 + A_3) - B_3*(A_0 + A_1),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[3, 5] A_0 B_0 A_1 B_1 B_2 A_2 B_3 B_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_3+B_4)==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2+B_3+B_4)-A_2*(B_0+B_3+B_4)==0,B_3>0,A_2*B_0-B_3*(A_0+A_1)==0,B_4>0,A_0*B_0-B_4*(A_0+A_1)==0,-A_2*B_0+(A_0+A_1)*(B_1+B_2+B_3+B_4)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2, B_3, B_4 = QQ["A_0, B_0, A_1, B_1, B_2, A_2, B_3, B_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3 + B_4),A_1*B_0 - B_1*(A_0 + A_1),A_2*B_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2 + B_3 + B_4) - A_2*(B_0 + B_3 + B_4),A_2*B_0 - B_3*(A_0 + A_1),A_0*B_0 - B_4*(A_0 + A_1),-A_2*B_0 + (A_0 + A_1)*(B_1 + B_2 + B_3 + B_4),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[3, 5] A_0 A_1 B_0 B_1 A_2 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_3==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*B_3==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,A_3>0,A_0*(B_2+B_3)-A_3*B_3==0,B_3>0,B_0*(A_0+A_1+A_3)-B_3*(A_0+A_1)==0,-B_0*(A_2+A_3)+(A_0+A_1)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, A_3, B_3 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, A_3, B_3"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_3,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2) - A_2*B_3,B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*B_3,B_0*(A_0 + A_1 + A_3) - B_3*(A_0 + A_1),-B_0*(A_2 + A_3) + (A_0 + A_1)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[4, 4] A_0 A_1 B_0 A_2 A_3 B_1 A_4 B_2

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,A_2>0,A_0*B_0-A_2*B_2==0,A_3>0,A_0*(B_1+B_2)-A_3*B_2==0,B_1>0,B_0*(A_2+A_3+A_4)-B_1*(A_0+A_1+A_2+A_3)==0,A_4>0,A_0*(B_1+B_2)-A_4*B_2==0,B_2>0,B_0*(A_4+Max(A_3,A_0+A_1))-B_2*(A_0+A_1+A_2+A_3)==0,-B_0*(A_3+A_4)+(B_1+B_2)*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, A_3, B_1, A_4, B_2 = QQ["A_0, A_1, B_0, A_2, A_3, B_1, A_4, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_0 - A_2*B_2,A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_2 + A_3 + A_4) - B_1*(A_0 + A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_4*B_2,B_0*(A_4 + A_3) - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_3 + A_4) + (B_1 + B_2)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_0 - A_2*B_2,A_0*(B_1 + B_2) - A_3*B_2,B_0*(A_2 + A_3 + A_4) - B_1*(A_0 + A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_4*B_2,B_0*(A_4 + A_0 + A_1) - B_2*(A_0 + A_1 + A_2 + A_3),-B_0*(A_3 + A_4) + (B_1 + B_2)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
Solution 1:
(1, -1, -1, 0, 0, 1, 1, -1, 1)
-----
CASE:[4, 4] A_0 A_1 B_0 B_1 A_2 A_3 B_2 A_4

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)==0,B_0>0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1)==0,A_3>0,A_0*B_2==0,B_2>0,B_0*(A_0+A_2+A_3+A_4)-B_2*(A_0+A_1)==0,A_4>0,A_0*B_2==0,B_2*(A_0+A_1)-(B_0+B_1)*(A_2+A_3+A_4)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, A_3, B_2, A_4 = QQ["A_0, A_1, B_0, B_1, A_2, A_3, B_2, A_4"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1),0,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),A_0*(B_0 + B_1),A_0*B_2,B_0*(A_0 + A_2 + A_3 + A_4) - B_2*(A_0 + A_1),A_0*B_2,B_2*(A_0 + A_1) - (B_0 + B_1)*(A_2 + A_3 + A_4),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[4, 4] A_0 A_1 B_0 B_1 A_2 B_2 A_3 A_4

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_0+B_1+B_2)==0,B_2>0,B_0*(A_2+A_3+A_4)-B_2*(A_0+A_1)==0,A_3>0,A_0*B_2==0,A_4>0,0==0,B_2*(A_0+A_1)-(B_0+B_1)*(A_2+A_3+A_4)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, A_3, A_4 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, A_3, A_4"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1),0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_0 + B_1 + B_2),B_0*(A_2 + A_3 + A_4) - B_2*(A_0 + A_1),A_0*B_2,0,B_2*(A_0 + A_1) - (B_0 + B_1)*(A_2 + A_3 + A_4),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[4, 4] A_0 B_0 A_1 B_1 A_2 A_3 B_2 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_4)==0,A_2>0,A_0*B_1-A_2*B_0==0,A_3>0,A_0*B_2-A_3*B_0==0,B_2>0,B_0*(A_0+A_2+A_3+A_4)-B_2*(A_0+A_1+A_4)==0,A_4>0,A_0*B_2-A_4*B_0==0,B_2*(A_0+A_1)-(B_0+B_1)*(A_2+A_3+A_4)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2, A_4 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2, A_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_4),A_0*B_1 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_0 + A_2 + A_3 + A_4) - B_2*(A_0 + A_1 + A_4),A_0*B_2 - A_4*B_0,B_2*(A_0 + A_1) - (B_0 + B_1)*(A_2 + A_3 + A_4),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[4, 4] A_0 B_0 A_1 B_1 A_2 B_2 A_3 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_4)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_2+A_3+A_4)-B_2*(A_0+A_1+A_4)==0,A_3>0,A_0*B_2-A_3*B_0==0,A_4>0,-A_4*B_0==0,B_2*(A_0+A_1)-(B_0+B_1)*(A_2+A_3+A_4)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_4),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_3 + A_4) - B_2*(A_0 + A_1 + A_4),A_0*B_2 - A_3*B_0,-A_4*B_0,B_2*(A_0 + A_1) - (B_0 + B_1)*(A_2 + A_3 + A_4),A_0-1,B_0-1),
]
Solution 1:
(1, 1, -1, -1, 0, 1, 0, -1)
-----
CASE:[4, 4] A_0 A_1 B_0 B_1 A_2 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_2+B_3)==0,B_0>0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1)==0,A_2>0,A_0*Max(B_0+B_1,B_2+B_3)-A_2*(B_2+B_3)==0,A_3>0,A_0*(B_2+B_3)-A_3*(B_2+B_3)==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,B_3>0,B_0*Max(A_0+A_1,A_2+A_3)-B_3*(A_0+A_1)==0,(A_0+A_1)*(B_2+B_3)-(A_2+A_3)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, A_3, B_2, B_3 = QQ["A_0, A_1, B_0, B_1, A_2, A_3, B_2, B_3"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*(B_2 + B_3),0,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_0 + B_1 - A_2*(B_2 + B_3),A_0*(B_2 + B_3) - A_3*(B_2 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),B_0*A_0 + A_1 - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*(B_2 + B_3),0,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_0 + B_1 - A_2*(B_2 + B_3),A_0*(B_2 + B_3) - A_3*(B_2 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),B_0*A_2 + A_3 - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*(B_2 + B_3),0,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_2 + B_3 - A_2*(B_2 + B_3),A_0*(B_2 + B_3) - A_3*(B_2 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),B_0*A_0 + A_1 - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*(B_2 + B_3),0,B_0*(A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_2 + B_3 - A_2*(B_2 + B_3),A_0*(B_2 + B_3) - A_3*(B_2 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),B_0*A_2 + A_3 - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[4, 4] A_0 A_1 B_0 B_1 A_2 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_3==0,B_0>0,B_1>0,A_2*B_0-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+Max(B_3,B_0+B_1))-A_2*B_3==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,A_3>0,A_0*(B_2+B_3)-A_3*B_3==0,B_3>0,B_0*(A_3+Max(A_2,A_0+A_1))-B_3*(A_0+A_1)==0,(A_0+A_1)*(B_2+B_3)-(A_2+A_3)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, B_1, A_2, B_2, A_3, B_3 = QQ["A_0, A_1, B_0, B_1, A_2, B_2, A_3, B_3"].gens()
I_list = [ideal(0,A_0*(B_0 + B_1) - A_1*B_3,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3) - A_2*B_3,B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*B_3,B_0*(A_3 + A_2) - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*B_3,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_3) - A_2*B_3,B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*B_3,B_0*(A_3 + A_0 + A_1) - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*B_3,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_0 + B_1) - A_2*B_3,B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*B_3,B_0*(A_3 + A_2) - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,A_0*(B_0 + B_1) - A_1*B_3,0,A_2*B_0 - B_1*(A_0 + A_1),A_0*(B_2 + B_0 + B_1) - A_2*B_3,B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*B_3,B_0*(A_3 + A_0 + A_1) - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[4, 4] A_0 B_0 A_1 B_1 A_2 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2+B_3)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1)==0,A_2>0,A_0*Max(B_1,B_2+B_3)-A_2*(B_0+B_2+B_3)==0,A_3>0,A_0*(B_2+B_3)-A_3*(B_0+B_2+B_3)==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,B_3>0,B_0*Max(A_0,A_2+A_3)-B_3*(A_0+A_1)==0,(A_0+A_1)*(B_2+B_3)-(A_2+A_3)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_1 - A_2*(B_0 + B_2 + B_3),A_0*(B_2 + B_3) - A_3*(B_0 + B_2 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),B_0*A_0 - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_1 - A_2*(B_0 + B_2 + B_3),A_0*(B_2 + B_3) - A_3*(B_0 + B_2 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),B_0*A_2 + A_3 - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_2 + B_3 - A_2*(B_0 + B_2 + B_3),A_0*(B_2 + B_3) - A_3*(B_0 + B_2 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),B_0*A_0 - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_2 + B_3 - A_2*(B_0 + B_2 + B_3),A_0*(B_2 + B_3) - A_3*(B_0 + B_2 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),B_0*A_2 + A_3 - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[4, 4] A_0 B_0 A_1 B_1 A_2 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_2+Max(B_1,B_3))-A_2*(B_0+B_3)==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,A_3>0,A_0*(B_2+B_3)-A_3*(B_0+B_3)==0,B_3>0,B_0*(A_3+Max(A_0,A_2))-B_3*(A_0+A_1)==0,(A_0+A_1)*(B_2+B_3)-(A_2+A_3)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_1) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_0) - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_1) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_2) - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_3) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_0) - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_2 + B_3) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_2) - B_3*(A_0 + A_1),(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[4, 4] A_0 B_0 A_1 A_2 B_1 A_3 B_2 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*B_1-A_2*B_0==0,B_1>0,B_0*(A_3+Max(A_4,A_1+A_2))-B_1*(A_0+A_1+A_2+A_4)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,B_2>0,B_0*(A_0+A_3+A_4)-B_2*(A_0+A_1+A_2+A_4)==0,A_4>0,A_0*(B_1+B_2)-A_4*B_0==0,-B_0*(A_3+A_4)+(B_1+B_2)*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2, A_4 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2, A_4"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_3 + A_4) - B_1*(A_0 + A_1 + A_2 + A_4),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_0 + A_3 + A_4) - B_2*(A_0 + A_1 + A_2 + A_4),A_0*(B_1 + B_2) - A_4*B_0,-B_0*(A_3 + A_4) + (B_1 + B_2)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*B_1 - A_2*B_0,B_0*(A_3 + A_1 + A_2) - B_1*(A_0 + A_1 + A_2 + A_4),A_0*(B_1 + B_2) - A_3*B_0,B_0*(A_0 + A_3 + A_4) - B_2*(A_0 + A_1 + A_2 + A_4),A_0*(B_1 + B_2) - A_4*B_0,-B_0*(A_3 + A_4) + (B_1 + B_2)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
Solution 1:
(1, 1, -1, 0, 0, 1, -1, 1, -1)
Solution 2:
(1, 1, 0, -1, -1, 1, 0, -1, 1)
Solution 3:
(1, 1, 0, 1, 1, 1, 0, 1, -1)
-----
CASE:[4, 4] A_0 B_0 A_1 A_2 B_1 B_2 A_3 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*B_0==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_1>0,B_0*Max(A_1+A_2,A_3+A_4)-B_1*(A_0+A_1+A_2+A_4)==0,B_2>0,B_0*(A_3+A_4)-B_2*(A_0+A_1+A_2+A_4)==0,A_3>0,A_0*(B_1+B_2)-A_3*B_0==0,A_4>0,A_0*(B_1+B_2)-A_4*B_0==0,-B_0*(A_3+A_4)+(B_1+B_2)*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2, A_3, A_4 = QQ["A_0, B_0, A_1, A_2, B_1, B_2, A_3, A_4"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*A_1 + A_2 - B_1*(A_0 + A_1 + A_2 + A_4),B_0*(A_3 + A_4) - B_2*(A_0 + A_1 + A_2 + A_4),A_0*(B_1 + B_2) - A_3*B_0,A_0*(B_1 + B_2) - A_4*B_0,-B_0*(A_3 + A_4) + (B_1 + B_2)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*B_0 - A_1*B_0,A_0*(B_1 + B_2) - A_2*B_0,B_0*A_3 + A_4 - B_1*(A_0 + A_1 + A_2 + A_4),B_0*(A_3 + A_4) - B_2*(A_0 + A_1 + A_2 + A_4),A_0*(B_1 + B_2) - A_3*B_0,A_0*(B_1 + B_2) - A_4*B_0,-B_0*(A_3 + A_4) + (B_1 + B_2)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
Solution 1:
(1, 1, 0, 0, 0, 1, 0, 0, 0)
-----
CASE:[4, 4] A_0 A_1 B_0 A_2 B_1 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_2+B_3)==0,B_0>0,A_2>0,A_0*(B_0+B_1)-A_2*(B_2+B_3)==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*(B_2+B_3)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,B_3>0,B_0*(A_0+A_1)-B_3*(A_0+A_1+A_2)==0,-A_3*B_0+(A_0+A_1+A_2)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_0*(B_0 + B_1) - A_2*(B_2 + B_3),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*(A_0 + A_1) - B_3*(A_0 + A_1 + A_2),-A_3*B_0 + (A_0 + A_1 + A_2)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[4, 4] A_0 A_1 B_0 A_2 B_1 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_3==0,B_0>0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*B_3==0,B_1>0,A_2*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*B_3==0,B_3>0,B_0*(A_0+A_1+A_3)-B_3*(A_0+A_1+A_2)==0,-A_3*B_0+(A_0+A_1+A_2)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, B_2, A_3, B_3 = QQ["A_0, A_1, B_0, A_2, B_1, B_2, A_3, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_3,0,A_0*(B_0 + B_1 + B_2) - A_2*B_3,A_2*B_0 - B_1*(A_0 + A_1 + A_2),A_3*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*B_3,B_0*(A_0 + A_1 + A_3) - B_3*(A_0 + A_1 + A_2),-A_3*B_0 + (A_0 + A_1 + A_2)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[4, 4] A_0 B_0 A_1 A_2 B_1 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_2+B_3)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2+B_3)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*(B_0+B_2+B_3)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,B_3>0,A_0*B_0-B_3*(A_0+A_1+A_2)==0,-A_3*B_0+(A_0+A_1+A_2)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, A_3, B_2, B_3 = QQ["A_0, B_0, A_1, A_2, B_1, A_3, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_2 + B_3),A_0*B_1 - A_2*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_0 + B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),A_0*B_0 - B_3*(A_0 + A_1 + A_2),-A_3*B_0 + (A_0 + A_1 + A_2)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[4, 4] A_0 B_0 A_1 A_2 B_1 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*B_0-A_1*(B_0+B_3)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_2)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*(B_0+B_3)==0,B_3>0,B_0*(A_0+A_3)-B_3*(A_0+A_1+A_2)==0,-A_3*B_0+(A_0+A_1+A_2)*(B_1+B_2+B_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, A_2, B_1, B_2, A_3, B_3 = QQ["A_0, B_0, A_1, A_2, B_1, B_2, A_3, B_3"].gens()
I_list = [ideal(0,0,A_0*B_0 - A_1*(B_0 + B_3),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_2),A_3*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_0 + A_3) - B_3*(A_0 + A_1 + A_2),-A_3*B_0 + (A_0 + A_1 + A_2)*(B_1 + B_2 + B_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[4, 4] A_0 B_0 A_1 B_1 B_2 A_2 B_3 A_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*B_0==0,B_1>0,A_1*B_0-B_1*(A_0+A_1+A_3)==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1+A_3)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*B_0==0,B_3>0,B_0*(A_0+A_2+A_3)-B_3*(A_0+A_1+A_3)==0,A_3>0,A_0*(B_2+B_3)-A_3*B_0==0,(A_0+A_1)*(B_2+B_3)-(A_2+A_3)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2, B_3, A_3 = QQ["A_0, B_0, A_1, B_1, B_2, A_2, B_3, A_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1 + A_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1 + A_3),A_0*(B_1 + B_2 + B_3) - A_2*B_0,B_0*(A_0 + A_2 + A_3) - B_3*(A_0 + A_1 + A_3),A_0*(B_2 + B_3) - A_3*B_0,(A_0 + A_1)*(B_2 + B_3) - (A_2 + A_3)*(B_0 + B_1),A_0-1,B_0-1),
]
Solution 1:
(1, 1, 0, -1, 1, 1, -1, 0)
Solution 2:
(1, (2*sqrt(3) - 11*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/6 - 2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/6 + 5*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/6 + 5*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/6 + 26*I/3)/(3*sqrt(3) + 13*I), (2*sqrt(3) - 11*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/6 - 2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/6 + 5*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/6 + 5*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/6 + 26*I/3)/(3*sqrt(3) + 13*I), (-28**(1/3)/6 - 28**(1/3)*sqrt(3)*I/2 - (98 + 294*sqrt(3)*I)**(1/3)/3 + (1 + 3*sqrt(3)*I)**(2/3)/3)/(1 + 3*sqrt(3)*I)**(2/3), 1, (sqrt(3) + 2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/3 + 13*I/3 + 4*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/3 + 2*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/3 + 2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/3)/(3*sqrt(3) + 13*I), -2/3 - (7/2 + 21*sqrt(3)*I/2)**(1/3)/3 - 7/(3*(7/2 + 21*sqrt(3)*I/2)**(1/3)), 1)
Solution 3:
(1, (2*sqrt(3) - 4*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/9 - 14*I*(28 + 84*sqrt(3)*I)**(1/3)/9 - 5*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/9 - 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/9 - 5*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/9 - 2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/9 + sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/9 + 11*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/9 + 26*I/3)/(3*sqrt(3) + 13*I), (2*sqrt(3) - 4*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/9 - 14*I*(28 + 84*sqrt(3)*I)**(1/3)/9 - 5*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/9 - 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/9 - 5*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/9 - 2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/9 + sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/9 + 11*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/9 + 26*I/3)/(3*sqrt(3) + 13*I), (sqrt(3)/3 - sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/6 - 5*I/3 - I*(28 + 84*sqrt(3)*I)**(1/3)/6 + 98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/6 + sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/2)/(sqrt(3) - 5*I), 1, (sqrt(3) - 4*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/9 - 14*I*(28 + 84*sqrt(3)*I)**(1/3)/9 - 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/9 - 11*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/18 - sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/18 - 2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/9 + 5*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/18 + 5*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/18 + 13*I/3)/(3*sqrt(3) + 13*I), -2/3 - 7/(3*(-1/2 - sqrt(3)*I/2)*(7/2 + 21*sqrt(3)*I/2)**(1/3)) - (-1/2 - sqrt(3)*I/2)*(7/2 + 21*sqrt(3)*I/2)**(1/3)/3, 1)
Solution 4:
(1, (2*sqrt(3) - 11*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/18 - 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 2*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/9 + 8*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/9 + 4*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/9 + 2*sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/9 + 5*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/18 + 26*I/3 + 35*I*(28 + 84*sqrt(3)*I)**(1/3)/18)/(3*sqrt(3) + 13*I), (2*sqrt(3) - 11*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/18 - 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 + 2*2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/9 + 8*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/9 + 4*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/9 + 2*sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/9 + 5*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/18 + 26*I/3 + 35*I*(28 + 84*sqrt(3)*I)**(1/3)/18)/(3*sqrt(3) + 13*I), (sqrt(3)/3 - I*(28 + 84*sqrt(3)*I)**(1/3)/12 + 2*I/3 + 98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/12 + sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/4 + sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/12)/(sqrt(3) + 2*I), 1, (sqrt(3) - 11*2**(1/3)*I*(7 + 21*sqrt(3)*I)**(2/3)/18 - sqrt(3)*98**(1/3)*(1 + 3*sqrt(3)*I)**(2/3)/9 - 2*98**(1/3)*I*(1 + 3*sqrt(3)*I)**(2/3)/9 - 4*2**(2/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(1/3)/9 - 7*sqrt(3)*(28 + 84*sqrt(3)*I)**(1/3)/18 - 2**(2/3)*I*(7 + 21*sqrt(3)*I)**(1/3)/9 + 13*I/3 + 5*2**(1/3)*sqrt(3)*(7 + 21*sqrt(3)*I)**(2/3)/18 + 35*I*(28 + 84*sqrt(3)*I)**(1/3)/18)/(3*sqrt(3) + 13*I), -2/3 - (-1/2 + sqrt(3)*I/2)*(7/2 + 21*sqrt(3)*I/2)**(1/3)/3 - 7/(3*(-1/2 + sqrt(3)*I/2)*(7/2 + 21*sqrt(3)*I/2)**(1/3)), 1)
-----
CASE:[4, 4] A_0 B_0 A_1 B_1 B_2 A_2 B_3 B_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_3+B_4)==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2+B_3+B_4)-A_2*(B_0+B_3+B_4)==0,B_3>0,A_2*B_0-B_3*(A_0+A_1)==0,B_4>0,A_0*B_0-B_4*(A_0+A_1)==0,-A_2*(B_0+B_1)+(A_0+A_1)*(B_2+B_3+B_4)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2, B_3, B_4 = QQ["A_0, B_0, A_1, B_1, B_2, A_2, B_3, B_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3 + B_4),A_1*B_0 - B_1*(A_0 + A_1),A_2*B_0 - B_2*(A_0 + A_1),A_0*(B_1 + B_2 + B_3 + B_4) - A_2*(B_0 + B_3 + B_4),A_2*B_0 - B_3*(A_0 + A_1),A_0*B_0 - B_4*(A_0 + A_1),-A_2*(B_0 + B_1) + (A_0 + A_1)*(B_2 + B_3 + B_4),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[5, 3] A_0 B_0 A_1 B_1 A_2 A_3 B_2 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_4)==0,A_2>0,A_0*B_1-A_2*B_0==0,A_3>0,A_0*B_2-A_3*B_0==0,B_2>0,B_0*(A_0+A_2+A_3+A_4)-B_2*(A_0+A_1+A_4)==0,A_4>0,A_0*B_2-A_4*B_0==0,B_2*(A_0+A_1+A_2)-(A_3+A_4)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2, A_4 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2, A_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_4),A_0*B_1 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_0 + A_2 + A_3 + A_4) - B_2*(A_0 + A_1 + A_4),A_0*B_2 - A_4*B_0,B_2*(A_0 + A_1 + A_2) - (A_3 + A_4)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[5, 3] A_0 B_0 A_1 B_1 A_2 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_2+B_3)==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1)==0,A_2>0,A_0*B_1-A_2*(B_0+B_2+B_3)==0,A_3>0,A_0*(2*B_2+2*B_3)-A_3*(B_0+B_2+B_3)==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,B_3>0,B_0*Max(A_0,A_3)-B_3*(A_0+A_1)==0,-A_3*(B_0+B_1)+(B_2+B_3)*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_1 - A_2*(B_0 + B_2 + B_3),A_0*(2*B_2 + 2*B_3) - A_3*(B_0 + B_2 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),B_0*A_0 - B_3*(A_0 + A_1),-A_3*(B_0 + B_1) + (B_2 + B_3)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_2 + B_3),B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1),A_0*B_1 - A_2*(B_0 + B_2 + B_3),A_0*(2*B_2 + 2*B_3) - A_3*(B_0 + B_2 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),B_0*A_3 - B_3*(A_0 + A_1),-A_3*(B_0 + B_1) + (B_2 + B_3)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
Solution 1:
(1, 0, -1, 0, 1, -1, -1, 1, 1)
Solution 2:
(1, 2, 1, 0, 1, 1, 1/3, -1/3, -1)
-----
CASE:[5, 3] A_0 B_0 A_1 B_1 B_2 A_2 B_3 A_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*B_0==0,B_1>0,A_1*B_0-B_1*(A_0+A_1+A_3)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1+A_3)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*B_0==0,B_3>0,B_0*(A_0+A_2+A_3)-B_3*(A_0+A_1+A_3)==0,A_3>0,A_0*B_3-A_3*B_0==0,B_3*(A_0+A_1)-(A_2+A_3)*(B_0+B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2, B_3, A_3 = QQ["A_0, B_0, A_1, B_1, B_2, A_2, B_3, A_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*B_0,A_1*B_0 - B_1*(A_0 + A_1 + A_3),A_2*B_0 - B_2*(A_0 + A_1 + A_3),A_0*(B_1 + B_2 + B_3) - A_2*B_0,B_0*(A_0 + A_2 + A_3) - B_3*(A_0 + A_1 + A_3),A_0*B_3 - A_3*B_0,B_3*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[5, 3] A_0 A_1 B_0 A_2 B_1 A_3 A_4 B_2

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,A_2>0,A_0*(B_0+B_1)-A_2*B_2==0,B_1>0,B_0*(A_2+A_3+A_4)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*Max(B_1,B_2)-A_3*B_2==0,A_4>0,A_0*B_2-A_4*B_2==0,B_2>0,B_0*(A_3+A_4+Max(A_0+A_1,A_3+A_4))-B_2*(A_0+A_1+A_2)==0,B_2*(A_0+A_1+A_2)-(A_3+A_4)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, A_4, B_2 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, A_4, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_3 + A_4) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - A_3*B_2,A_0*B_2 - A_4*B_2,B_0*(A_3 + A_4 + A_0 + A_1) - B_2*(A_0 + A_1 + A_2),B_2*(A_0 + A_1 + A_2) - (A_3 + A_4)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_3 + A_4) - B_1*(A_0 + A_1 + A_2),A_0*B_1 - A_3*B_2,A_0*B_2 - A_4*B_2,B_0*(A_3 + A_4 + A_3 + A_4) - B_2*(A_0 + A_1 + A_2),B_2*(A_0 + A_1 + A_2) - (A_3 + A_4)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_3 + A_4) - B_1*(A_0 + A_1 + A_2),A_0*B_2 - A_3*B_2,A_0*B_2 - A_4*B_2,B_0*(A_3 + A_4 + A_0 + A_1) - B_2*(A_0 + A_1 + A_2),B_2*(A_0 + A_1 + A_2) - (A_3 + A_4)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_2,0,A_0*(B_0 + B_1) - A_2*B_2,B_0*(A_2 + A_3 + A_4) - B_1*(A_0 + A_1 + A_2),A_0*B_2 - A_3*B_2,A_0*B_2 - A_4*B_2,B_0*(A_3 + A_4 + A_3 + A_4) - B_2*(A_0 + A_1 + A_2),B_2*(A_0 + A_1 + A_2) - (A_3 + A_4)*(B_0 + B_1),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[5, 3] A_0 A_1 B_0 A_2 B_1 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_2+B_3)==0,B_0>0,A_2>0,A_0*(B_0+B_1)-A_2*(B_2+B_3)==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_2+B_3+Max(B_1,B_2+B_3))-A_3*(B_2+B_3)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,B_3>0,B_0*Max(A_3,A_0+A_1)-B_3*(A_0+A_1+A_2)==0,-A_3*(B_0+B_1)+(B_2+B_3)*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_0*(B_0 + B_1) - A_2*(B_2 + B_3),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_2 + B_3 + B_1) - A_3*(B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_3 - B_3*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1) + (B_2 + B_3)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_0*(B_0 + B_1) - A_2*(B_2 + B_3),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_2 + B_3 + B_1) - A_3*(B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_0 + A_1 - B_3*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1) + (B_2 + B_3)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_0*(B_0 + B_1) - A_2*(B_2 + B_3),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_2 + B_3 + B_2 + B_3) - A_3*(B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_3 - B_3*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1) + (B_2 + B_3)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_0*(B_0 + B_1) - A_2*(B_2 + B_3),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_2 + B_3 + B_2 + B_3) - A_3*(B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*A_0 + A_1 - B_3*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1) + (B_2 + B_3)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[5, 3] A_0 B_0 A_1 B_1 B_2 A_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_3)==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,A_2>0,A_0*Max(B_3,B_1+B_2)-A_2*(B_0+B_3)==0,A_3>0,A_0*B_3-A_3*(B_0+B_3)==0,B_3>0,B_0*(A_2+A_3+Max(A_0,A_2+A_3))-B_3*(A_0+A_1)==0,B_3*(A_0+A_1)-(A_2+A_3)*(B_0+B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2, A_3, B_3 = QQ["A_0, B_0, A_1, B_1, B_2, A_2, A_3, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3),A_1*B_0 - B_1*(A_0 + A_1),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*B_3 - A_2*(B_0 + B_3),A_0*B_3 - A_3*(B_0 + B_3),B_0*(A_2 + A_3 + A_0) - B_3*(A_0 + A_1),B_3*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3),A_1*B_0 - B_1*(A_0 + A_1),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*B_3 - A_2*(B_0 + B_3),A_0*B_3 - A_3*(B_0 + B_3),B_0*(A_2 + A_3 + A_2 + A_3) - B_3*(A_0 + A_1),B_3*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3),A_1*B_0 - B_1*(A_0 + A_1),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*B_1 + B_2 - A_2*(B_0 + B_3),A_0*B_3 - A_3*(B_0 + B_3),B_0*(A_2 + A_3 + A_0) - B_3*(A_0 + A_1),B_3*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3),A_1*B_0 - B_1*(A_0 + A_1),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*B_1 + B_2 - A_2*(B_0 + B_3),A_0*B_3 - A_3*(B_0 + B_3),B_0*(A_2 + A_3 + A_2 + A_3) - B_3*(A_0 + A_1),B_3*(A_0 + A_1) - (A_2 + A_3)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[5, 3] A_0 B_0 A_1 B_1 B_2 A_2 B_3 B_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1+B_2)-A_1*(B_0+B_3+B_4)==0,B_1>0,A_1*B_0-B_1*(A_0+A_1)==0,B_2>0,A_2*B_0-B_2*(A_0+A_1)==0,A_2>0,A_0*(B_3+B_4+Max(B_1+B_2,B_3+B_4))-A_2*(B_0+B_3+B_4)==0,B_3>0,A_2*B_0-B_3*(A_0+A_1)==0,B_4>0,B_0*Max(A_0,A_2)-B_4*(A_0+A_1)==0,-A_2*(B_0+B_1+B_2)+(A_0+A_1)*(B_3+B_4)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, B_2, A_2, B_3, B_4 = QQ["A_0, B_0, A_1, B_1, B_2, A_2, B_3, B_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3 + B_4),A_1*B_0 - B_1*(A_0 + A_1),A_2*B_0 - B_2*(A_0 + A_1),A_0*(B_3 + B_4 + B_1 + B_2) - A_2*(B_0 + B_3 + B_4),A_2*B_0 - B_3*(A_0 + A_1),B_0*A_0 - B_4*(A_0 + A_1),-A_2*(B_0 + B_1 + B_2) + (A_0 + A_1)*(B_3 + B_4),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3 + B_4),A_1*B_0 - B_1*(A_0 + A_1),A_2*B_0 - B_2*(A_0 + A_1),A_0*(B_3 + B_4 + B_1 + B_2) - A_2*(B_0 + B_3 + B_4),A_2*B_0 - B_3*(A_0 + A_1),B_0*A_2 - B_4*(A_0 + A_1),-A_2*(B_0 + B_1 + B_2) + (A_0 + A_1)*(B_3 + B_4),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3 + B_4),A_1*B_0 - B_1*(A_0 + A_1),A_2*B_0 - B_2*(A_0 + A_1),A_0*(B_3 + B_4 + B_3 + B_4) - A_2*(B_0 + B_3 + B_4),A_2*B_0 - B_3*(A_0 + A_1),B_0*A_0 - B_4*(A_0 + A_1),-A_2*(B_0 + B_1 + B_2) + (A_0 + A_1)*(B_3 + B_4),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1 + B_2) - A_1*(B_0 + B_3 + B_4),A_1*B_0 - B_1*(A_0 + A_1),A_2*B_0 - B_2*(A_0 + A_1),A_0*(B_3 + B_4 + B_3 + B_4) - A_2*(B_0 + B_3 + B_4),A_2*B_0 - B_3*(A_0 + A_1),B_0*A_2 - B_4*(A_0 + A_1),-A_2*(B_0 + B_1 + B_2) + (A_0 + A_1)*(B_3 + B_4),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[5, 3] A_0 B_0 A_1 B_1 A_2 B_2 A_3 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_4)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_3+A_4+Max(A_2,A_3+A_4))-B_2*(A_0+A_1+A_4)==0,A_3>0,A_0*B_2-A_3*B_0==0,A_4>0,A_0*B_2-A_4*B_0==0,B_2*(A_0+A_1+A_2)-(A_3+A_4)*(B_0+B_1)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_4),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_3 + A_4 + A_2) - B_2*(A_0 + A_1 + A_4),A_0*B_2 - A_3*B_0,A_0*B_2 - A_4*B_0,B_2*(A_0 + A_1 + A_2) - (A_3 + A_4)*(B_0 + B_1),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_4),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_3 + A_4 + A_3 + A_4) - B_2*(A_0 + A_1 + A_4),A_0*B_2 - A_3*B_0,A_0*B_2 - A_4*B_0,B_2*(A_0 + A_1 + A_2) - (A_3 + A_4)*(B_0 + B_1),A_0-1,B_0-1),
]
Solution 1:
(1, 0, -1, 0, 0, 1, -1, 0, 0)
Solution 2:
(1, 2, 1, 0, 0, 1, 1, 0, 0)
-----
CASE:[5, 3] A_0 B_0 A_1 B_1 A_2 B_2 B_3 A_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_3)==0,A_2>0,A_0*(B_1+B_2+B_3)-A_2*B_0==0,B_2>0,B_0*Max(A_2,A_3)-B_2*(A_0+A_1+A_3)==0,B_3>0,B_0*(A_0+A_3)-B_3*(A_0+A_1+A_3)==0,A_3>0,A_0*(2*B_2+2*B_3)-A_3*B_0==0,-A_3*(B_0+B_1)+(B_2+B_3)*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, B_3, A_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, B_3, A_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_3),A_0*(B_1 + B_2 + B_3) - A_2*B_0,B_0*A_2 - B_2*(A_0 + A_1 + A_3),B_0*(A_0 + A_3) - B_3*(A_0 + A_1 + A_3),A_0*(2*B_2 + 2*B_3) - A_3*B_0,-A_3*(B_0 + B_1) + (B_2 + B_3)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_3),A_0*(B_1 + B_2 + B_3) - A_2*B_0,B_0*A_3 - B_2*(A_0 + A_1 + A_3),B_0*(A_0 + A_3) - B_3*(A_0 + A_1 + A_3),A_0*(2*B_2 + 2*B_3) - A_3*B_0,-A_3*(B_0 + B_1) + (B_2 + B_3)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
Solution 1:
(1, 0, -1, 0, 1, -1, -1, 1, -1)
Solution 2:
(1, 2, 1, 0, 1, 1, -1/3, 1/3, -1)
-----
CASE:[5, 3] A_0 A_1 B_0 A_2 A_3 B_1 A_4 B_2

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_2==0,B_0>0,A_2>0,A_0*B_0-A_2*B_2==0,A_3>0,A_0*B_1-A_3*B_2==0,B_1>0,B_0*(A_2+A_3+A_4)-B_1*(A_0+A_1+A_2+A_3)==0,A_4>0,A_0*(B_1+B_2)-A_4*B_2==0,B_2>0,B_0*(A_0+A_1+A_4)-B_2*(A_0+A_1+A_2+A_3)==0,-A_4*B_0+(B_1+B_2)*(A_0+A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, A_3, B_1, A_4, B_2 = QQ["A_0, A_1, B_0, A_2, A_3, B_1, A_4, B_2"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_2,0,A_0*B_0 - A_2*B_2,A_0*B_1 - A_3*B_2,B_0*(A_2 + A_3 + A_4) - B_1*(A_0 + A_1 + A_2 + A_3),A_0*(B_1 + B_2) - A_4*B_2,B_0*(A_0 + A_1 + A_4) - B_2*(A_0 + A_1 + A_2 + A_3),-A_4*B_0 + (B_1 + B_2)*(A_0 + A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[5, 3] A_0 B_0 A_1 B_1 A_2 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_3)==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,A_3>0,A_0*(B_2+B_3)-A_3*(B_0+B_3)==0,B_3>0,B_0*(A_0+A_3)-B_3*(A_0+A_1)==0,-A_3*(B_0+B_1)+(B_2+B_3)*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_2 + B_3) - A_3*(B_0 + B_3),B_0*(A_0 + A_3) - B_3*(A_0 + A_1),-A_3*(B_0 + B_1) + (B_2 + B_3)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[5, 3] A_0 A_1 B_0 A_2 B_1 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_3==0,B_0>0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*B_3==0,B_1>0,A_2*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*B_3==0,B_3>0,B_0*(A_0+A_1+A_3)-B_3*(A_0+A_1+A_2)==0,-A_3*(B_0+B_1)+(B_2+B_3)*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, B_2, A_3, B_3 = QQ["A_0, A_1, B_0, A_2, B_1, B_2, A_3, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_3,0,A_0*(B_0 + B_1 + B_2) - A_2*B_3,A_2*B_0 - B_1*(A_0 + A_1 + A_2),A_3*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*B_3,B_0*(A_0 + A_1 + A_3) - B_3*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1) + (B_2 + B_3)*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[6, 2] A_0 B_0 A_1 B_1 A_2 B_2 A_3 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_4)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_2+A_3+A_4)-B_2*(A_0+A_1+A_4)==0,A_3>0,A_0*B_2-A_3*B_0==0,A_4>0,-A_4*B_0==0,-(A_3+A_4)*(B_0+B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_4),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_3 + A_4) - B_2*(A_0 + A_1 + A_4),A_0*B_2 - A_3*B_0,-A_4*B_0,-(A_3 + A_4)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
]
Solution 1:
(1, 1, -1, -1, 0, 1, 0, -1)
-----
CASE:[6, 2] A_0 B_0 A_1 B_1 A_2 B_2 A_3 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1+A_4)==0,A_2>0,A_0*(B_1+B_2)-A_2*B_0==0,B_2>0,B_0*(A_2+A_3+A_4)-B_2*(A_0+A_1+A_4)==0,A_3>0,A_0*B_2-A_3*B_0==0,A_4>0,-A_4*B_0==0,-(A_3+A_4)*(B_0+B_1+B_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, A_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2) - B_1*(A_0 + A_1 + A_4),A_0*(B_1 + B_2) - A_2*B_0,B_0*(A_2 + A_3 + A_4) - B_2*(A_0 + A_1 + A_4),A_0*B_2 - A_3*B_0,-A_4*B_0,-(A_3 + A_4)*(B_0 + B_1 + B_2),A_0-1,B_0-1),
]
Solution 1:
(1, 1, -1, -1, 0, 1, 0, -1)
-----
CASE:[6, 2] A_0 A_1 B_0 A_2 B_1 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_3==0,B_0>0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*B_3==0,B_1>0,A_2*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_3+Max(B_3,B_1+B_2))-A_3*B_3==0,B_3>0,B_0*(A_3+Max(A_3,A_0+A_1))-B_3*(A_0+A_1+A_2)==0,-A_3*(B_0+B_1+B_2)+B_3*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, B_2, A_3, B_3 = QQ["A_0, A_1, B_0, A_2, B_1, B_2, A_3, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_3,0,A_0*(B_0 + B_1 + B_2) - A_2*B_3,A_2*B_0 - B_1*(A_0 + A_1 + A_2),A_3*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_3 + B_3) - A_3*B_3,B_0*(A_3 + A_3) - B_3*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_3,0,A_0*(B_0 + B_1 + B_2) - A_2*B_3,A_2*B_0 - B_1*(A_0 + A_1 + A_2),A_3*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_3 + B_3) - A_3*B_3,B_0*(A_3 + A_0 + A_1) - B_3*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_3,0,A_0*(B_0 + B_1 + B_2) - A_2*B_3,A_2*B_0 - B_1*(A_0 + A_1 + A_2),A_3*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_3 + B_1 + B_2) - A_3*B_3,B_0*(A_3 + A_3) - B_3*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_3,0,A_0*(B_0 + B_1 + B_2) - A_2*B_3,A_2*B_0 - B_1*(A_0 + A_1 + A_2),A_3*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_3 + B_1 + B_2) - A_3*B_3,B_0*(A_3 + A_0 + A_1) - B_3*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[6, 2] A_0 A_1 B_0 A_2 B_1 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*B_3==0,B_0>0,A_2>0,A_0*(B_0+B_1+B_2)-A_2*B_3==0,B_1>0,A_2*B_0-B_1*(A_0+A_1+A_2)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_3+Max(B_3,B_1+B_2))-A_3*B_3==0,B_3>0,B_0*(A_3+Max(A_3,A_0+A_1))-B_3*(A_0+A_1+A_2)==0,-A_3*(B_0+B_1+B_2)+B_3*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, B_2, A_3, B_3 = QQ["A_0, A_1, B_0, A_2, B_1, B_2, A_3, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*B_3,0,A_0*(B_0 + B_1 + B_2) - A_2*B_3,A_2*B_0 - B_1*(A_0 + A_1 + A_2),A_3*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_3 + B_3) - A_3*B_3,B_0*(A_3 + A_3) - B_3*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_3,0,A_0*(B_0 + B_1 + B_2) - A_2*B_3,A_2*B_0 - B_1*(A_0 + A_1 + A_2),A_3*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_3 + B_3) - A_3*B_3,B_0*(A_3 + A_0 + A_1) - B_3*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_3,0,A_0*(B_0 + B_1 + B_2) - A_2*B_3,A_2*B_0 - B_1*(A_0 + A_1 + A_2),A_3*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_3 + B_1 + B_2) - A_3*B_3,B_0*(A_3 + A_3) - B_3*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,A_0*B_0 - A_1*B_3,0,A_0*(B_0 + B_1 + B_2) - A_2*B_3,A_2*B_0 - B_1*(A_0 + A_1 + A_2),A_3*B_0 - B_2*(A_0 + A_1 + A_2),A_0*(B_3 + B_1 + B_2) - A_3*B_3,B_0*(A_3 + A_0 + A_1) - B_3*(A_0 + A_1 + A_2),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[6, 2] A_0 B_0 A_1 B_1 A_2 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_3)==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,A_3>0,A_0*(B_3+Max(B_2,B_3))-A_3*(B_0+B_3)==0,B_3>0,B_0*(A_3+Max(A_0,A_3))-B_3*(A_0+A_1)==0,-A_3*(B_0+B_1+B_2)+B_3*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_3 + B_2) - A_3*(B_0 + B_3),B_0*(A_3 + A_0) - B_3*(A_0 + A_1),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_3 + B_2) - A_3*(B_0 + B_3),B_0*(A_3 + A_3) - B_3*(A_0 + A_1),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_3 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_0) - B_3*(A_0 + A_1),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_3 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_3) - B_3*(A_0 + A_1),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[6, 2] A_0 B_0 A_1 B_1 A_2 B_2 A_3 B_3

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*(B_0+B_3)==0,B_1>0,B_0*(A_1+A_2)-B_1*(A_0+A_1)==0,A_2>0,A_0*(B_1+B_2)-A_2*(B_0+B_3)==0,B_2>0,B_0*(A_2+A_3)-B_2*(A_0+A_1)==0,A_3>0,A_0*(B_3+Max(B_2,B_3))-A_3*(B_0+B_3)==0,B_3>0,B_0*(A_3+Max(A_0,A_3))-B_3*(A_0+A_1)==0,-A_3*(B_0+B_1+B_2)+B_3*(A_0+A_1+A_2)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3 = QQ["A_0, B_0, A_1, B_1, A_2, B_2, A_3, B_3"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_3 + B_2) - A_3*(B_0 + B_3),B_0*(A_3 + A_0) - B_3*(A_0 + A_1),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_3 + B_2) - A_3*(B_0 + B_3),B_0*(A_3 + A_3) - B_3*(A_0 + A_1),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_3 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_0) - B_3*(A_0 + A_1),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*(B_0 + B_3),B_0*(A_1 + A_2) - B_1*(A_0 + A_1),A_0*(B_1 + B_2) - A_2*(B_0 + B_3),B_0*(A_2 + A_3) - B_2*(A_0 + A_1),A_0*(B_3 + B_3) - A_3*(B_0 + B_3),B_0*(A_3 + A_3) - B_3*(A_0 + A_1),-A_3*(B_0 + B_1 + B_2) + B_3*(A_0 + A_1 + A_2),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[6, 2] A_0 B_0 A_1 B_1 A_2 A_3 B_2 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_4)==0,A_2>0,A_0*B_1-A_2*B_0==0,A_3>0,A_0*B_2-A_3*B_0==0,B_2>0,B_0*(A_0+A_4+Max(A_4,A_2+A_3))-B_2*(A_0+A_1+A_4)==0,A_4>0,2*A_0*B_2-A_4*B_0==0,-A_4*(B_0+B_1)+B_2*(A_0+A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2, A_4 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2, A_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_4),A_0*B_1 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_0 + A_4 + A_4) - B_2*(A_0 + A_1 + A_4),2*A_0*B_2 - A_4*B_0,-A_4*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_4),A_0*B_1 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_0 + A_4 + A_2 + A_3) - B_2*(A_0 + A_1 + A_4),2*A_0*B_2 - A_4*B_0,-A_4*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2 + A_3),A_0-1,B_0-1),
]
Solution 1:
(1, 0, -1, 0, 0, 1, -1, 0, -1)
Solution 2:
(1, 2, 1, 0, 0, 1, 1, 0, -1)
-----
CASE:[6, 2] A_0 B_0 A_1 B_1 A_2 A_3 B_2 A_4

FOR MATHEMATICA:
A_0>0,B_0>0,A_1>0,A_0*(B_0+B_1)-A_1*B_0==0,B_1>0,B_0*(A_1+A_2+A_3)-B_1*(A_0+A_1+A_4)==0,A_2>0,A_0*B_1-A_2*B_0==0,A_3>0,A_0*B_2-A_3*B_0==0,B_2>0,B_0*(A_0+A_4+Max(A_4,A_2+A_3))-B_2*(A_0+A_1+A_4)==0,A_4>0,2*A_0*B_2-A_4*B_0==0,-A_4*(B_0+B_1)+B_2*(A_0+A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, B_0, A_1, B_1, A_2, A_3, B_2, A_4 = QQ["A_0, B_0, A_1, B_1, A_2, A_3, B_2, A_4"].gens()
I_list = [ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_4),A_0*B_1 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_0 + A_4 + A_4) - B_2*(A_0 + A_1 + A_4),2*A_0*B_2 - A_4*B_0,-A_4*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2 + A_3),A_0-1,B_0-1),
ideal(0,0,A_0*(B_0 + B_1) - A_1*B_0,B_0*(A_1 + A_2 + A_3) - B_1*(A_0 + A_1 + A_4),A_0*B_1 - A_2*B_0,A_0*B_2 - A_3*B_0,B_0*(A_0 + A_4 + A_2 + A_3) - B_2*(A_0 + A_1 + A_4),2*A_0*B_2 - A_4*B_0,-A_4*(B_0 + B_1) + B_2*(A_0 + A_1 + A_2 + A_3),A_0-1,B_0-1),
]
Solution 1:
(1, 0, -1, 0, 0, 1, -1, 0, -1)
Solution 2:
(1, 2, 1, 0, 0, 1, 1, 0, -1)
-----
CASE:[6, 2] A_0 A_1 B_0 A_2 B_1 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_2+B_3)==0,B_0>0,A_2>0,A_0*(B_0+B_1)-A_2*(B_2+B_3)==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*(B_2+B_3)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,B_3>0,B_0*(A_0+A_1)-B_3*(A_0+A_1+A_2)==0,(B_2+B_3)*(A_0+A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_0*(B_0 + B_1) - A_2*(B_2 + B_3),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*(A_0 + A_1) - B_3*(A_0 + A_1 + A_2),(B_2 + B_3)*(A_0 + A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----
CASE:[6, 2] A_0 A_1 B_0 A_2 B_1 A_3 B_2 B_3

FOR MATHEMATICA:
A_0>0,A_1>0,A_0*B_0-A_1*(B_2+B_3)==0,B_0>0,A_2>0,A_0*(B_0+B_1)-A_2*(B_2+B_3)==0,B_1>0,B_0*(A_2+A_3)-B_1*(A_0+A_1+A_2)==0,A_3>0,A_0*(B_1+B_2+B_3)-A_3*(B_2+B_3)==0,B_2>0,A_3*B_0-B_2*(A_0+A_1+A_2)==0,B_3>0,B_0*(A_0+A_1)-B_3*(A_0+A_1+A_2)==0,(B_2+B_3)*(A_0+A_1+A_2+A_3)==0,

FOR SAGE (to convert to Groebner basis):
A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3 = QQ["A_0, A_1, B_0, A_2, B_1, A_3, B_2, B_3"].gens()
I_list = [ideal(0,A_0*B_0 - A_1*(B_2 + B_3),0,A_0*(B_0 + B_1) - A_2*(B_2 + B_3),B_0*(A_2 + A_3) - B_1*(A_0 + A_1 + A_2),A_0*(B_1 + B_2 + B_3) - A_3*(B_2 + B_3),A_3*B_0 - B_2*(A_0 + A_1 + A_2),B_0*(A_0 + A_1) - B_3*(A_0 + A_1 + A_2),(B_2 + B_3)*(A_0 + A_1 + A_2 + A_3),A_0-1,B_0-1),
]
could not solve, try mathematica!
-----